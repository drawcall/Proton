{"version":3,"file":"proton.web.js","sources":["../src/utils/WebGLUtil.js","../src/utils/DomUtil.js","../src/utils/ImgUtil.js","../src/utils/Util.js","../src/utils/Puid.js","../src/core/Pool.js","../src/debug/Stats.js","../src/events/EventDispatcher.js","../src/math/MathUtil.js","../src/math/Integration.js","../src/core/Proton.js","../src/utils/Rgb.js","../src/math/Span.js","../src/utils/PropUtil.js","../src/math/ease.js","../src/math/Vector2D.js","../src/core/Particle.js","../src/utils/ColorUtil.js","../src/math/Polar2D.js","../src/math/Mat3.js","../src/math/ArraySpan.js","../src/math/Rectangle.js","../src/initialize/Rate.js","../src/initialize/Initialize.js","../src/initialize/Life.js","../src/zone/Zone.js","../src/zone/PointZone.js","../src/initialize/Position.js","../src/initialize/Velocity.js","../src/initialize/Mass.js","../src/initialize/Radius.js","../src/initialize/Body.js","../src/behaviour/Behaviour.js","../src/behaviour/Force.js","../src/behaviour/Attraction.js","../src/behaviour/RandomDrift.js","../src/behaviour/Gravity.js","../src/behaviour/Collision.js","../src/behaviour/CrossZone.js","../src/behaviour/Alpha.js","../src/behaviour/Scale.js","../src/behaviour/Rotate.js","../src/behaviour/Color.js","../src/behaviour/Cyclone.js","../src/behaviour/Repulsion.js","../src/behaviour/GravityWell.js","../src/initialize/InitializeUtil.js","../src/emitter/Emitter.js","../src/emitter/BehaviourEmitter.js","../src/emitter/FollowEmitter.js","../src/utils/Types.js","../src/render/BaseRenderer.js","../src/render/CanvasRenderer.js","../src/render/DomRenderer.js","../src/render/EaselRenderer.js","../src/render/PixelRenderer.js","../src/render/PixiRenderer.js","../src/utils/MStack.js","../src/render/WebGLRenderer.js","../src/render/CustomRenderer.js","../src/zone/LineZone.js","../src/zone/CircleZone.js","../src/zone/RectZone.js","../src/zone/ImageZone.js","../src/debug/Debug.js"],"sourcesContent":["export default {\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method ipot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Boolean}\n   */\n  ipot(length) {\n    return (length & (length - 1)) === 0;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method nhpot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Number}\n   */\n  nhpot(length) {\n    --length;\n    for (let i = 1; i < 32; i <<= 1) {\n      length = length | (length >> i);\n    }\n\n    return length + 1;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeTranslation\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} tx either 0 or 1\n   * @param {Number} ty either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeTranslation(tx, ty) {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeRotation\n   *\n   * @todo add description\n   * @todo add return description\n   *\n   * @param {Number} angleInRadians\n   *\n   * @return {Object}\n   */\n  makeRotation(angleInRadians) {\n    let c = Math.cos(angleInRadians);\n    let s = Math.sin(angleInRadians);\n\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeScale\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} sx either 0 or 1\n   * @param {Number} sy either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeScale(sx, sy) {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method matrixMultiply\n   *\n   * @todo add description\n   * @todo add a, b description\n   * @todo add return description\n   *\n   * @param {Object} a\n   * @param {Object} b\n   *\n   * @return {Object}\n   */\n  matrixMultiply(a, b) {\n    let a00 = a[0 * 3 + 0];\n    let a01 = a[0 * 3 + 1];\n    let a02 = a[0 * 3 + 2];\n    let a10 = a[1 * 3 + 0];\n    let a11 = a[1 * 3 + 1];\n    let a12 = a[1 * 3 + 2];\n    let a20 = a[2 * 3 + 0];\n    let a21 = a[2 * 3 + 1];\n    let a22 = a[2 * 3 + 2];\n    let b00 = b[0 * 3 + 0];\n    let b01 = b[0 * 3 + 1];\n    let b02 = b[0 * 3 + 2];\n    let b10 = b[1 * 3 + 0];\n    let b11 = b[1 * 3 + 1];\n    let b12 = b[1 * 3 + 2];\n    let b20 = b[2 * 3 + 0];\n    let b21 = b[2 * 3 + 1];\n    let b22 = b[2 * 3 + 2];\n\n    return [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  }\n};\n","export default {\n  /**\n   * Creates and returns a new canvas. The opacity is by default set to 0\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method createCanvas\n   *\n   * @param {String} $id the canvas' id\n   * @param {Number} $width the canvas' width\n   * @param {Number} $height the canvas' height\n   * @param {String} [$position=absolute] the canvas' position, default is 'absolute'\n   *\n   * @return {Object}\n   */\n  createCanvas(id, width, height, position = \"absolute\") {\n    const dom = document.createElement(\"canvas\");\n\n    dom.id = id;\n    dom.width = width;\n    dom.height = height;\n    dom.style.opacity = 0;\n    dom.style.position = position;\n    this.transform(dom, -500, -500, 0, 0);\n\n    return dom;\n  },\n\n  createDiv(id, width, height) {\n    const dom = document.createElement(\"div\");\n\n    dom.id = id;\n    dom.style.position = \"absolute\";\n    this.resize(dom, width, height);\n\n    return dom;\n  },\n\n  resize(dom, width, height) {\n    dom.style.width = width + \"px\";\n    dom.style.height = height + \"px\";\n    dom.style.marginLeft = -width / 2 + \"px\";\n    dom.style.marginTop = -height / 2 + \"px\";\n  },\n\n  /**\n   * Adds a transform: translate(), scale(), rotate() to a given div dom for all browsers\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method transform\n   *\n   * @param {HTMLDivElement} div\n   * @param {Number} $x\n   * @param {Number} $y\n   * @param {Number} $scale\n   * @param {Number} $rotate\n   */\n  transform(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate(${x}px, ${y}px) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"transform\", transform);\n  },\n\n  transform3d(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate3d(${x}px, ${y}px, 0) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"backfaceVisibility\", \"hidden\");\n    this.css3(div, \"transform\", transform);\n  },\n\n  css3(div, key, val) {\n    const bkey = key.charAt(0).toUpperCase() + key.substr(1);\n\n    div.style[`Webkit${bkey}`] = val;\n    div.style[`Moz${bkey}`] = val;\n    div.style[`O${bkey}`] = val;\n    div.style[`ms${bkey}`] = val;\n    div.style[`${key}`] = val;\n  }\n};\n","import WebGLUtil from \"./WebGLUtil\";\nimport DomUtil from \"./DomUtil\";\n\nconst imgsCache = {};\nconst canvasCache = {};\nlet canvasId = 0;\n\nexport default {\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    context.drawImage(image, rect.x, rect.y);\n    const imagedata = context.getImageData(rect.x, rect.y, rect.width, rect.height);\n    context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\n    return imagedata;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method getImgFromCache\n   *\n   * @todo add description\n   * @todo describe func\n   *\n   * @param {Mixed}               img\n   * @param {Proton.Particle}     particle\n   * @param {Boolean}             drawCanvas  set to true if a canvas should be saved into particle.data.canvas\n   * @param {Boolean}             func\n   */\n  getImgFromCache(img, callback, param) {\n    const src = typeof img === \"string\" ? img : img.src;\n\n    if (imgsCache[src]) {\n      callback(imgsCache[src], param);\n    } else {\n      const image = new Image();\n      image.onload = e => {\n        imgsCache[src] = e.target;\n        callback(imgsCache[src], param);\n      };\n\n      image.src = src;\n    }\n  },\n\n  getCanvasFromCache(img, callback, param) {\n    const src = img.src;\n\n    if (!canvasCache[src]) {\n      const width = WebGLUtil.nhpot(img.width);\n      const height = WebGLUtil.nhpot(img.height);\n\n      const canvas = DomUtil.createCanvas(`proton_canvas_cache_${++canvasId}`, width, height);\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(img, 0, 0, img.width, img.height);\n\n      canvasCache[src] = canvas;\n    }\n\n    callback && callback(canvasCache[src], param);\n\n    return canvasCache[src];\n  }\n};\n","import ImgUtil from \"./ImgUtil\";\n\nexport default {\n  /**\n   * Returns the default if the value is null or undefined\n   *\n   * @memberof Proton#Proton.Util\n   * @method initValue\n   *\n   * @param {Mixed} value a specific value, could be everything but null or undefined\n   * @param {Mixed} defaults the default if the value is null or undefined\n   */\n  initValue(value, defaults) {\n    value = value !== null && value !== undefined ? value : defaults;\n    return value;\n  },\n\n  /**\n   * Checks if the value is a valid array\n   *\n   * @memberof Proton#Proton.Util\n   * @method isArray\n   *\n   * @param {Array} value Any array\n   *\n   * @returns {Boolean}\n   */\n  isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n  },\n\n  /**\n   * Destroyes the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyArray\n   *\n   * @param {Array} array Any array\n   */\n  emptyArray(arr) {\n    if (arr) arr.length = 0;\n  },\n\n  toArray(arr) {\n    return this.isArray(arr) ? arr : [arr];\n  },\n\n  sliceArray(arr1, index, arr2) {\n    this.emptyArray(arr2);\n    for (let i = index; i < arr1.length; i++) {\n      arr2.push(arr1[i]);\n    }\n  },\n\n  getRandFromArray(arr) {\n    if (!arr) return null;\n    return arr[Math.floor(arr.length * Math.random())];\n  },\n\n  /**\n   * Destroyes the given object\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyObject\n   *\n   * @param {Object} obj Any object\n   */\n  emptyObject(obj, ignore = null) {\n    for (let key in obj) {\n      if (ignore && ignore.indexOf(key) > -1) continue;\n      delete obj[key];\n    }\n  },\n\n  /**\n   * Makes an instance of a class and binds the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method classApply\n   *\n   * @param {Function} constructor A class to make an instance from\n   * @param {Array} [args] Any array to bind it to the constructor\n   *\n   * @return {Object} The instance of constructor, optionally bind with args\n   */\n  classApply(constructor, args = null) {\n    if (!args) {\n      return new constructor();\n    } else {\n      const FactoryFunc = constructor.bind.apply(constructor, [null].concat(args));\n      return new FactoryFunc();\n    }\n  },\n\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    return ImgUtil.getImageData(context, image, rect);\n  },\n\n  destroyAll(arr, param = null) {\n    let i = arr.length;\n\n    while (i--) {\n      try {\n        arr[i].destroy(param);\n      } catch (e) {}\n\n      delete arr[i];\n    }\n\n    arr.length = 0;\n  },\n\n  assign(target, source) {\n    if (typeof Object.assign !== \"function\") {\n      for (let key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    } else {\n      return Object.assign(target, source);\n    }\n  }\n};\n","const idsMap = {};\n\nconst Puid = {\n  _index: 0,\n  _cache: {},\n\n  id(type) {\n    if (idsMap[type] === undefined || idsMap[type] === null) idsMap[type] = 0;\n    return `${type}_${idsMap[type]++}`;\n  },\n\n  getId(target) {\n    let uid = this.getIdFromCache(target);\n    if (uid) return uid;\n\n    uid = `PUID_${this._index++}`;\n    this._cache[uid] = target;\n    return uid;\n  },\n\n  getIdFromCache(target) {\n    let obj, id;\n\n    for (id in this._cache) {\n      obj = this._cache[id];\n\n      if (obj === target) return id;\n      if (this.isBody(obj, target) && obj.src === target.src) return id;\n    }\n\n    return null;\n  },\n\n  isBody(obj, target) {\n    return typeof obj === \"object\" && typeof target === \"object\" && obj.isInner && target.isInner;\n  },\n\n  getTarget(uid) {\n    return this._cache[uid];\n  }\n};\n\nexport default Puid;\n","/**\n * Pool is the cache pool of the proton engine, it is very important.\n *\n * get(target, params, uid)\n *  Class\n *    uid = Puid.getId -> Puid save target cache\n *    target.__puid = uid\n *\n *  body\n *    uid = Puid.getId -> Puid save target cache\n *\n *\n * expire(target)\n *  cache[target.__puid] push target\n *\n */\nimport Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\n\nexport default class Pool {\n  /**\n   * @memberof! Proton#\n   * @constructor\n   * @alias Proton.Pool\n   *\n   * @todo add description\n   * @todo add description of properties\n   *\n   * @property {Number} total\n   * @property {Object} cache\n   */\n  constructor(num) {\n    this.total = 0;\n    this.cache = {};\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method get\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  get(target, params, uid) {\n    let p;\n    uid = uid || target.__puid || Puid.getId(target);\n\n    if (this.cache[uid] && this.cache[uid].length > 0) {\n      p = this.cache[uid].pop();\n    } else {\n      p = this.createOrClone(target, params);\n    }\n\n    p.__puid = target.__puid || uid;\n    return p;\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method set\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object} target\n   *\n   * @return {Object}\n   */\n  expire(target) {\n    return this.getCache(target.__puid).push(target);\n  }\n\n  /**\n   * Creates a new class instance\n   *\n   * @todo add more documentation\n   *\n   * @method create\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target any Object or Function\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  createOrClone(target, params) {\n    this.total++;\n\n    if (this.create) {\n      return this.create(target, params);\n    } else if (typeof target === \"function\") {\n      return Util.classApply(target, params);\n    } else {\n      return target.clone();\n    }\n  }\n\n  /**\n   * @todo add description - what is in the cache?\n   *\n   * @method getCount\n   * @memberof Proton#Proton.Pool\n   *\n   * @return {Number}\n   */\n  getCount() {\n    let count = 0;\n    for (let id in this.cache) count += this.cache[id].length;\n    return count++;\n  }\n\n  /**\n   * Destroyes all items from Pool.cache\n   *\n   * @method destroy\n   * @memberof Proton#Proton.Pool\n   */\n  destroy() {\n    for (let id in this.cache) {\n      this.cache[id].length = 0;\n      delete this.cache[id];\n    }\n  }\n\n  /**\n   * Returns Pool.cache\n   *\n   * @method getCache\n   * @memberof Proton#Proton.Pool\n   * @private\n   *\n   * @param {Number} uid the unique id\n   *\n   * @return {Object}\n   */\n  getCache(uid = \"default\") {\n    if (!this.cache[uid]) this.cache[uid] = [];\n    return this.cache[uid];\n  }\n}\n","export default class Stats {\n  constructor(proton) {\n    this.proton = proton;\n    this.container = null;\n    this.type = 1;\n\n    this.emitterIndex = 0;\n    this.rendererIndex = 0;\n  }\n\n  update(style, body) {\n    this.add(style, body);\n\n    const emitter = this.getEmitter();\n    const renderer = this.getRenderer();\n    let str = \"\";\n\n    switch (this.type) {\n      case 2:\n        str += \"emitter:\" + this.proton.emitters.length + \"<br>\";\n        if (emitter) str += \"em speed:\" + emitter.emitSpeed + \"<br>\";\n        if (emitter) str += \"pos:\" + this.getEmitterPos(emitter);\n        break;\n\n      case 3:\n        if (emitter) str += \"initializes:\" + emitter.initializes.length + \"<br>\";\n        if (emitter)\n          str += '<span style=\"display:inline-block;\">' + this.concatArr(emitter.initializes) + \"</span><br>\";\n        if (emitter) str += \"behaviours:\" + emitter.behaviours.length + \"<br>\";\n        if (emitter) str += '<span style=\"display:inline-block;\">' + this.concatArr(emitter.behaviours) + \"</span><br>\";\n        break;\n\n      case 4:\n        if (renderer) str += renderer.name + \"<br>\";\n        if (renderer) str += \"body:\" + this.getCreatedNumber(renderer) + \"<br>\";\n        break;\n\n      default:\n        str += \"particles:\" + this.proton.getCount() + \"<br>\";\n        str += \"pool:\" + this.proton.pool.getCount() + \"<br>\";\n        str += \"total:\" + this.proton.pool.total;\n    }\n\n    this.container.innerHTML = str;\n  }\n\n  add(style, body) {\n    if (!this.container) {\n      this.type = 1;\n\n      this.container = document.createElement(\"div\");\n      this.container.style.cssText = [\n        \"position:absolute;bottom:0px;left:0;cursor:pointer;\",\n        \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\",\n        \"width:120px;height:50px;background-color:#002;color:#0ff;\"\n      ].join(\"\");\n\n      this.container.addEventListener(\n        \"click\",\n        e => {\n          this.type++;\n          if (this.type > 4) this.type = 1;\n        },\n        false\n      );\n\n      let bg, color;\n      switch (style) {\n        case 2:\n          bg = \"#201\";\n          color = \"#f08\";\n          break;\n\n        case 3:\n          bg = \"#020\";\n          color = \"#0f0\";\n          break;\n\n        default:\n          bg = \"#002\";\n          color = \"#0ff\";\n      }\n\n      this.container.style[\"background-color\"] = bg;\n      this.container.style[\"color\"] = color;\n    }\n\n    if (!this.container.parentNode) {\n      body = body || this.body || document.body;\n      body.appendChild(this.container);\n    }\n  }\n\n  getEmitter() {\n    return this.proton.emitters[this.emitterIndex];\n  }\n\n  getRenderer() {\n    return this.proton.renderers[this.rendererIndex];\n  }\n\n  concatArr(arr) {\n    let result = \"\";\n    if (!arr || !arr.length) return result;\n\n    for (let i = 0; i < arr.length; i++) {\n      result += (arr[i].name || \"\").substr(0, 1) + \".\";\n    }\n\n    return result;\n  }\n\n  getCreatedNumber(renderer) {\n    return renderer.pool.total || (renderer.cpool && renderer.cpool.total) || 0;\n  }\n\n  getEmitterPos(e) {\n    return Math.round(e.p.x) + \",\" + Math.round(e.p.y);\n  }\n\n  destroy() {\n    if (this.container && this.container.parentNode) {\n      const body = this.body || document.body;\n      body.removeChild(this.container);\n    }\n\n    this.proton = null;\n    this.container = null;\n  }\n}\n","/*\n * EventDispatcher\n * This code reference since http://createjs.com/.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = null;\n  }\n\n  static bind(target) {\n    target.prototype.dispatchEvent = EventDispatcher.prototype.dispatchEvent;\n    target.prototype.hasEventListener = EventDispatcher.prototype.hasEventListener;\n    target.prototype.addEventListener = EventDispatcher.prototype.addEventListener;\n    target.prototype.removeEventListener = EventDispatcher.prototype.removeEventListener;\n    target.prototype.removeAllEventListeners = EventDispatcher.prototype.removeAllEventListeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this._listeners) {\n      this._listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this._listeners[type]) this._listeners[type] = [];\n    this._listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this._listeners) return;\n    if (!this._listeners[type]) return;\n\n    const arr = this._listeners[type];\n    const length = arr.length;\n\n    for (let i = 0; i < length; i++) {\n      if (arr[i] === listener) {\n        if (length === 1) {\n          delete this._listeners[type];\n        }\n\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this._listeners = null;\n    else if (this._listeners) delete this._listeners[type];\n  }\n\n  dispatchEvent(type, args) {\n    let result = false;\n    const listeners = this._listeners;\n\n    if (type && listeners) {\n      let arr = listeners[type];\n      if (!arr) return result;\n\n      // arr = arr.slice();\n      // to avoid issues with items being removed or added during the dispatch\n\n      let handler;\n      let i = arr.length;\n      while (i--) {\n        handler = arr[i];\n        result = result || handler(args);\n      }\n    }\n\n    return !!result;\n  }\n\n  hasEventListener(type) {\n    const listeners = this._listeners;\n    return !!(listeners && listeners[type]);\n  }\n}\n","const PI = 3.1415926;\nconst INFINITY = Infinity;\n\nconst MathUtil = {\n  PI: PI,\n  PIx2: PI * 2,\n  PI_2: PI / 2,\n  PI_180: PI / 180,\n  N180_PI: 180 / PI,\n  Infinity: -999,\n\n  isInfinity(num) {\n    return num === this.Infinity || num === INFINITY;\n  },\n\n  randomAToB(a, b, isInt = false) {\n    if (!isInt) return a + Math.random() * (b - a);\n    else return ((Math.random() * (b - a)) >> 0) + a;\n  },\n\n  randomFloating(center, f, isInt) {\n    return this.randomAToB(center - f, center + f, isInt);\n  },\n\n  randomColor() {\n    return \"#\" + (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6);\n  },\n\n  randomZone(display) {},\n\n  floor(num, k = 4) {\n    const digits = Math.pow(10, k);\n    return Math.floor(num * digits) / digits;\n  },\n\n  degreeTransform(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16(num) {\n    return `#${num.toString(16)}`;\n  }\n};\n\nexport default MathUtil;\n","export default class Integration {\n  constructor(type) {\n    this.type = type;\n  }\n\n  calculate(particles, time, damping) {\n    this.eulerIntegrate(particles, time, damping);\n  }\n\n  // Euler Integrate\n  // https://rosettacode.org/wiki/Euler_method\n  eulerIntegrate(particle, time, damping) {\n    if (!particle.sleep) {\n      particle.old.p.copy(particle.p);\n      particle.old.v.copy(particle.v);\n\n      particle.a.multiplyScalar(1 / particle.mass);\n      particle.v.add(particle.a.multiplyScalar(time));\n      particle.p.add(particle.old.v.multiplyScalar(time));\n\n      if (damping) particle.v.multiplyScalar(damping);\n\n      particle.a.clear();\n    }\n  }\n}\n","import Pool from \"./Pool\";\nimport Util from \"../utils/Util\";\nimport Stats from \"../debug/Stats\";\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport MathUtil from \"../math/MathUtil\";\nimport Integration from \"../math/Integration\";\n\nexport default class Proton {\n  static USE_CLOCK = false;\n\n  // measure 1:100\n  static MEASURE = 100;\n  static EULER = \"euler\";\n  static RK2 = \"runge-kutta2\";\n\n  // event name\n  static PARTICLE_CREATED = \"PARTICLE_CREATED\";\n  static PARTICLE_UPDATE = \"PARTICLE_UPDATE\";\n  static PARTICLE_SLEEP = \"PARTICLE_SLEEP\";\n  static PARTICLE_DEAD = \"PARTICLE_DEAD\";\n\n  static EMITTER_ADDED = \"EMITTER_ADDED\";\n  static EMITTER_REMOVED = \"EMITTER_REMOVED\";\n\n  static PROTON_UPDATE = \"PROTON_UPDATE\";\n  static PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\";\n  static DEFAULT_INTERVAL = 0.0167;\n\n  static amendChangeTabsBug = true;\n\n  /**\n   * The constructor to add emitters\n   *\n   * @constructor Proton\n   *\n   * @todo add more documentation of the single properties and parameters\n   *\n   * @param {Number | undefined} [integrationType=Proton.EULER]\n   *\n   * @property {String} [integrationType=Proton.EULER]\n   * @property {Array} emitters   All added emitter\n   * @property {Array} renderers  All added renderer\n   * @property {Number} time      The active time\n   * @property {Number} oldtime   The old time\n   */\n  constructor(integrationType) {\n    this.emitters = [];\n    this.renderers = [];\n\n    this.time = 0;\n    this.now = 0;\n    this.then = 0;\n    this.elapsed = 0;\n\n    this.stats = new Stats(this);\n    this.pool = new Pool(80);\n\n    this.integrationType = Util.initValue(integrationType, Proton.EULER);\n    this.integrator = new Integration(this.integrationType);\n\n    this._fps = \"auto\";\n    this._interval = Proton.DEFAULT_INTERVAL;\n  }\n\n  /**\n   * Sets the frames per second (FPS) for the Proton system.\n   * @param {number|string} fps - The desired FPS. Use \"auto\" for default behavior, or a number for a specific FPS.\n   */\n  set fps(fps) {\n    this._fps = fps;\n    this._interval = fps === \"auto\" ? Proton.DEFAULT_INTERVAL : MathUtil.floor(1 / fps, 7);\n  }\n\n  /**\n   * Gets the current frames per second (FPS) setting.\n   * @returns {number|string} The current FPS setting. Returns \"auto\" if set to default, or a number representing the specific FPS.\n   */\n  get fps() {\n    return this._fps;\n  }\n\n  /**\n   * add a type of Renderer\n   *\n   * @method addRenderer\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Renderer} render\n   */\n  addRenderer(render) {\n    render.init(this);\n    this.renderers.push(render);\n  }\n\n  /**\n   * @name add a type of Renderer\n   *\n   * @method addRenderer\n   * @param {Renderer} render\n   */\n  removeRenderer(render) {\n    const index = this.renderers.indexOf(render);\n    this.renderers.splice(index, 1);\n    render.remove(this);\n  }\n\n  /**\n   * add the Emitter\n   *\n   * @method addEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Emitter} emitter\n   */\n  addEmitter(emitter) {\n    this.emitters.push(emitter);\n    emitter.parent = this;\n\n    this.dispatchEvent(Proton.EMITTER_ADDED, emitter);\n  }\n\n  /**\n   * Removes an Emitter\n   *\n   * @method removeEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Proton.Emitter} emitter\n   */\n  removeEmitter(emitter) {\n    const index = this.emitters.indexOf(emitter);\n    this.emitters.splice(index, 1);\n    emitter.parent = null;\n\n    this.dispatchEvent(Proton.EMITTER_REMOVED, emitter);\n  }\n\n  /**\n   * Updates all added emitters\n   *\n   * @method update\n   * @memberof Proton\n   * @instance\n   */\n  update() {\n    // 'auto' is the default browser refresh rate, the vast majority is 60fps\n    if (this._fps === \"auto\") {\n      this.dispatchEvent(Proton.PROTON_UPDATE);\n\n      if (Proton.USE_CLOCK) {\n        if (!this.then) this.then = new Date().getTime();\n        this.now = new Date().getTime();\n        this.elapsed = (this.now - this.then) * 0.001;\n        // Fix bugs such as chrome browser switching tabs causing excessive time difference\n        this.amendChangeTabsBug();\n\n        if (this.elapsed > 0) this.emittersUpdate(this.elapsed);\n        this.then = this.now;\n      } else {\n        this.emittersUpdate(Proton.DEFAULT_INTERVAL);\n      }\n\n      this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n    }\n\n    // If the fps frame rate is set\n    else {\n      if (!this.then) this.then = new Date().getTime();\n      this.now = new Date().getTime();\n      this.elapsed = (this.now - this.then) * 0.001;\n\n      if (this.elapsed > this._interval) {\n        this.dispatchEvent(Proton.PROTON_UPDATE);\n        this.emittersUpdate(this._interval);\n        // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n        this.then = this.now - (this.elapsed % this._interval) * 1000;\n        this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n      }\n    }\n  }\n\n  emittersUpdate(elapsed) {\n    let i = this.emitters.length;\n    while (i--) this.emitters[i].update(elapsed);\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method amendChangeTabsBug\n   * @memberof Proton\n   * @instance\n   */\n  amendChangeTabsBug() {\n    if (!Proton.amendChangeTabsBug) return;\n    if (this.elapsed > 0.5) {\n      this.then = new Date().getTime();\n      this.elapsed = 0;\n    }\n  }\n\n  /**\n   * Counts all particles from all emitters\n   *\n   * @method getCount\n   * @memberof Proton\n   * @instance\n   */\n  getCount() {\n    let total = 0;\n    let i = this.emitters.length;\n\n    while (i--) total += this.emitters[i].particles.length;\n    return total;\n  }\n\n  getAllParticles() {\n    let particles = [];\n    let i = this.emitters.length;\n\n    while (i--) particles = particles.concat(this.emitters[i].particles);\n    return particles;\n  }\n\n  destroyAllEmitters() {\n    Util.destroyAll(this.emitters);\n  }\n\n  /**\n   * Destroys everything related to this Proton instance. This includes all emitters, and all properties\n   *\n   * @method destroy\n   * @memberof Proton\n   * @instance\n   */\n  destroy(remove = false) {\n    const destroyOther = () => {\n      this.time = 0;\n      this.then = 0;\n      this.pool.destroy();\n      this.stats.destroy();\n\n      Util.destroyAll(this.emitters);\n      Util.destroyAll(this.renderers, this.getAllParticles());\n\n      this.integrator = null;\n      this.renderers = null;\n      this.emitters = null;\n      this.stats = null;\n      this.pool = null;\n    };\n\n    if (remove) {\n      setTimeout(destroyOther, 200);\n    } else {\n      destroyOther();\n    }\n  }\n}\n\nEventDispatcher.bind(Proton);\n","export default class Rgb {\n  constructor(r = 255, g = 255, b = 255) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  reset() {\n    this.r = 255;\n    this.g = 255;\n    this.b = 255;\n  }\n}\n","import Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\n/**\n * Represents a span of values or an array.\n */\nexport default class Span {\n  /**\n   * @type {boolean}\n   * @private\n   */\n  isArray;\n\n  /**\n   * @type {number|number[]}\n   * @private\n   */\n  a;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  b;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  center;\n\n  /**\n   * Creates a new Span instance.\n   * @param {number|number[]} a - The first value or an array of values.\n   * @param {number} [b] - The second value (if a is not an array).\n   * @param {boolean} [center=false] - Whether to use center-based calculation.\n   */\n  constructor(a, b, center) {\n    if (Util.isArray(a)) {\n      this.isArray = true;\n      this.a = a;\n    } else {\n      this.isArray = false;\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this.center = Util.initValue(center, false);\n    }\n  }\n\n  /**\n   * Gets a value from the span.\n   * @param {boolean} [isInt=false] - Whether to return an integer value.\n   * @returns {number} A random value from the span.\n   */\n  getValue(isInt = false) {\n    if (this.isArray) {\n      return Util.getRandFromArray(this.a);\n    } else {\n      if (!this.center) {\n        return MathUtil.randomAToB(this.a, this.b, isInt);\n      } else {\n        return MathUtil.randomFloating(this.a, this.b, isInt);\n      }\n    }\n  }\n\n  /**\n   * Returns a new Span object.\n   * @param {*|Span} a - The first value or a Span object.\n   * @param {*} [b] - The second value.\n   * @param {*} [c] - The third value.\n   * @returns {Span} A new Span instance.\n   */\n  static setSpanValue(a, b, c) {\n    if (a instanceof Span) {\n      return a;\n    } else {\n      if (b === undefined) {\n        return new Span(a);\n      } else {\n        if (c === undefined) return new Span(a, b);\n        else return new Span(a, b, c);\n      }\n    }\n  }\n\n  /**\n   * Returns the value from a Span, if the param is not a Span it will return the given parameter.\n   * @param {*|Span} pan - The value or Span to get the value from.\n   * @returns {*} The value of Span OR the parameter if it is not a Span.\n   */\n  static getSpanValue(pan) {\n    return pan instanceof Span ? pan.getValue() : pan;\n  }\n}\n","import Span from \"../math/Span\";\n\nexport default {\n  hasProp(target, key) {\n    if (!target) return false;\n    return target[key] !== undefined;\n    // return obj.hasOwnProperty(key);\n  },\n\n  /**\n   * set the prototype in a given prototypeObject\n   *\n   * @memberof Proton#Proton.Util\n   * @method setProp\n   *\n   * @todo add description for param `target`\n   * @todo translate desription from chinese to english\n   *\n   * @param {Object} target\n   * @param {Object} prototypeObject An object of single prototypes\n   *\n   * @return {Object} target\n   */\n  setProp(target, props) {\n    for (let prop in props) {\n      if (target.hasOwnProperty(prop)) {\n        target[prop] = Span.getSpanValue(props[prop]);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method setVectorVal\n   *\n   * @todo add description for param `target`\n   * @todo add description for param `conf`\n   * @todo add description for function\n   *\n   * @param {Object} target\n   * @param {Object} conf\n   */\n  setVectorVal(particle, conf = null) {\n    if (!conf) return;\n\n    if (this.hasProp(conf, \"x\")) particle.p.x = conf[\"x\"];\n    if (this.hasProp(conf, \"y\")) particle.p.y = conf[\"y\"];\n\n    if (this.hasProp(conf, \"vx\")) particle.v.x = conf[\"vx\"];\n    if (this.hasProp(conf, \"vy\")) particle.v.y = conf[\"vy\"];\n\n    if (this.hasProp(conf, \"ax\")) particle.a.x = conf[\"ax\"];\n    if (this.hasProp(conf, \"ay\")) particle.a.y = conf[\"ay\"];\n\n    if (this.hasProp(conf, \"p\")) particle.p.copy(conf[\"p\"]);\n    if (this.hasProp(conf, \"v\")) particle.v.copy(conf[\"v\"]);\n    if (this.hasProp(conf, \"a\")) particle.a.copy(conf[\"a\"]);\n\n    if (this.hasProp(conf, \"position\")) particle.p.copy(conf[\"position\"]);\n    if (this.hasProp(conf, \"velocity\")) particle.v.copy(conf[\"velocity\"]);\n    if (this.hasProp(conf, \"accelerate\")) particle.a.copy(conf[\"accelerate\"]);\n  }\n};\n","import MathUtil from \"./MathUtil\";\n\nexport default {\n  easeLinear(value) {\n    return value;\n  },\n\n  easeInQuad(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine(value) {\n    return -Math.cos(value * MathUtil.PI_2) + 1;\n  },\n\n  easeOutSine(value) {\n    return Math.sin(value * MathUtil.PI_2);\n  },\n\n  easeInOutSine(value) {\n    return -0.5 * (Math.cos(Math.PI * value) - 1);\n  },\n\n  easeInExpo(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo(value) {\n    if (value === 0) return 0;\n\n    if (value === 1) return 1;\n\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack(value) {\n    let s = 1.70158;\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack(value) {\n    let s = 1.70158;\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack(value) {\n    let s = 1.70158;\n    if ((value /= 0.5) < 1) return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  },\n\n  getEasing(ease) {\n    if (typeof ease === \"function\") return ease;\n    else return this[ease] || this.easeLinear;\n  }\n};\n","import MathUtil from \"../math/MathUtil\";\n\nexport default class Vector2D {\n  /** @type {number} */\n  x;\n\n  /** @type {number} */\n  y;\n\n  /**\n   * Creates a new Vector2D instance.\n   * @param {number} [x=0] - The x coordinate.\n   * @param {number} [y=0] - The y coordinate.\n   */\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  /**\n   * Sets the x and y components of this vector.\n   * @param {number} x - The x coordinate.\n   * @param {number} y - The y coordinate.\n   * @returns {Vector2D} This vector.\n   */\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets the x component of this vector.\n   * @param {number} x - The x coordinate.\n   * @returns {Vector2D} This vector.\n   */\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  /**\n   * Sets the y component of this vector.\n   * @param {number} y - The y coordinate.\n   * @returns {Vector2D} This vector.\n   */\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Calculates the gradient (angle) of this vector.\n   * @returns {number} The gradient in radians.\n   */\n  getGradient() {\n    if (this.x !== 0) return Math.atan2(this.y, this.x);\n    else if (this.y > 0) return MathUtil.PI_2;\n    else if (this.y < 0) return -MathUtil.PI_2;\n  }\n\n  /**\n   * Copies the values of another vector to this one.\n   * @param {Vector2D} v - The vector to copy from.\n   * @returns {Vector2D} This vector.\n   */\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  }\n\n  /**\n   * Adds another vector to this one.\n   * @param {Vector2D} v - The vector to add.\n   * @param {Vector2D} [w] - An optional second vector to add.\n   * @returns {Vector2D} This vector.\n   */\n  add(v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n\n  /**\n   * Adds scalar values to this vector's components.\n   * @param {number} a - Value to add to x.\n   * @param {number} b - Value to add to y.\n   * @returns {Vector2D} This vector.\n   */\n  addXY(a, b) {\n    this.x += a;\n    this.y += b;\n\n    return this;\n  }\n\n  /**\n   * Adds two vectors and sets the result to this vector.\n   * @param {Vector2D} a - The first vector to add.\n   * @param {Vector2D} b - The second vector to add.\n   * @returns {Vector2D} This vector.\n   */\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n  }\n\n  /**\n   * Subtracts another vector from this one.\n   * @param {Vector2D} v - The vector to subtract.\n   * @param {Vector2D} [w] - An optional second vector to subtract.\n   * @returns {Vector2D} This vector.\n   */\n  sub(v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n\n  /**\n   * Subtracts one vector from another and sets the result to this vector.\n   * @param {Vector2D} a - The vector to subtract from.\n   * @param {Vector2D} b - The vector to subtract.\n   * @returns {Vector2D} This vector.\n   */\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * @param {number} s - The scalar to divide by.\n   * @returns {Vector2D} This vector.\n   */\n  divideScalar(s) {\n    if (s !== 0) {\n      this.x /= s;\n      this.y /= s;\n    } else {\n      this.set(0, 0);\n    }\n\n    return this;\n  }\n\n  /**\n   * Multiplies this vector by a scalar.\n   * @param {number} s - The scalar to multiply by.\n   * @returns {Vector2D} This vector.\n   */\n  multiplyScalar(s) {\n    this.x *= s;\n    this.y *= s;\n\n    return this;\n  }\n\n  /**\n   * Negates this vector (inverts its direction).\n   * @returns {Vector2D} This vector.\n   */\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  /**\n   * Calculates the dot product of this vector with another.\n   * @param {Vector2D} v - The other vector.\n   * @returns {number} The dot product.\n   */\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  /**\n   * Calculates the squared length of this vector.\n   * @returns {number} The squared length.\n   */\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  /**\n   * Calculates the length of this vector.\n   * @returns {number} The length.\n   */\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * Normalizes this vector (makes it unit length).\n   * @returns {Vector2D} This vector.\n   */\n  normalize() {\n    return this.divideScalar(this.length());\n  }\n\n  /**\n   * Calculates the distance to another vector.\n   * @param {Vector2D} v - The other vector.\n   * @returns {number} The distance.\n   */\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  /**\n   * Rotates this vector by an angle.\n   * @param {number} tha - The angle to rotate by (in radians).\n   * @returns {Vector2D} This vector.\n   */\n  rotate(tha) {\n    const x = this.x;\n    const y = this.y;\n\n    this.x = x * Math.cos(tha) + y * Math.sin(tha);\n    this.y = -x * Math.sin(tha) + y * Math.cos(tha);\n\n    return this;\n  }\n\n  /**\n   * Calculates the squared distance to another vector.\n   * @param {Vector2D} v - The other vector.\n   * @returns {number} The squared distance.\n   */\n  distanceToSquared(v) {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Linearly interpolates this vector toward another vector.\n   * @param {Vector2D} v - The target vector.\n   * @param {number} alpha - The interpolation factor (0-1).\n   * @returns {Vector2D} This vector.\n   */\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n\n    return this;\n  }\n\n  /**\n   * Checks if this vector is equal to another vector.\n   * @param {Vector2D} v - The other vector.\n   * @returns {boolean} True if the vectors are equal, false otherwise.\n   */\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  /**\n   * Sets this vector to zero.\n   * @returns {Vector2D} This vector.\n   */\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this;\n  }\n\n  /**\n   * Creates a new vector with the same x and y values as this one.\n   * @returns {Vector2D} A new Vector2D instance.\n   */\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n}\n","import Rgb from \"../utils/Rgb\";\nimport Puid from \"../utils/Puid\";\nimport Util from \"../utils/Util\";\nimport PropUtil from \"../utils/PropUtil\";\nimport ease from \"../math/ease\";\nimport Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\n\n/**\n * Represents a particle in a particle system.\n * @class Particle\n */\nexport default class Particle {\n  /** @type {string} The unique identifier of the particle */\n  id = \"\";\n\n  /** @type {{p:Vector2D,v:Vector2D,a:Vector2D}} Old state of the particle */\n  old = null;\n\n  /** @type {object} Custom data associated with the particle */\n  data = null;\n\n  /** @type {Behaviour[]} Array of behaviours applied to the particle */\n  behaviours = null;\n\n  /** @type {Vector2D} Current position of the particle */\n  p = null;\n\n  /** @type {Vector2D} Current velocity of the particle */\n  v = null;\n\n  /** @type {Vector2D} Current acceleration of the particle */\n  a = null;\n\n  /** @type {Rgb} Color of the particle */\n  rgb = null;\n\n  /**\n   * Creates a new Particle instance.\n   * @param {Object} [conf] Configuration object for the particle\n   */\n  constructor(conf) {\n    this.name = \"Particle\";\n    this.id = Puid.id(this.name);\n    this.old = {};\n    this.data = {};\n    this.behaviours = [];\n\n    this.p = new Vector2D();\n    this.v = new Vector2D();\n    this.a = new Vector2D();\n    this.old.p = new Vector2D();\n    this.old.v = new Vector2D();\n    this.old.a = new Vector2D();\n\n    this.rgb = new Rgb();\n    this.reset();\n    conf && PropUtil.setProp(this, conf);\n  }\n\n  /**\n   * Gets the direction of the particle's movement in degrees.\n   * @returns {number} The direction in degrees\n   */\n  getDirection() {\n    return Math.atan2(this.v.x, -this.v.y) * MathUtil.N180_PI;\n  }\n\n  /**\n   * Resets the particle to its initial state.\n   * @returns {Particle} The particle instance\n   */\n  reset() {\n    this.life = Infinity;\n    this.age = 0;\n\n    this.dead = false;\n    this.sleep = false;\n    this.body = null;\n    this.sprite = null;\n    this.parent = null;\n\n    this.energy = 1; // Energy Loss\n    this.mass = 1;\n    this.radius = 10;\n    this.alpha = 1;\n    this.scale = 1;\n    this.rotation = 0;\n    this.color = null;\n\n    this.p.set(0, 0);\n    this.v.set(0, 0);\n    this.a.set(0, 0);\n    this.old.p.set(0, 0);\n    this.old.v.set(0, 0);\n    this.old.a.set(0, 0);\n    this.easing = ease.easeLinear;\n\n    this.rgb.reset();\n    Util.emptyObject(this.data);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  /**\n   * Updates the particle's state.\n   * @param {number} time The time elapsed since the last update\n   * @param {number} index The index of the particle in its parent system\n   */\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n      this.applyBehaviours(time, index);\n    }\n\n    if (this.age < this.life) {\n      const scale = this.easing(this.age / this.life);\n      this.energy = Math.max(1 - scale, 0);\n    } else {\n      this.destroy();\n    }\n  }\n\n  /**\n   * Applies all behaviours attached to the particle.\n   * @param {number} time The time elapsed since the last update\n   * @param {number} index The index of the particle in its parent system\n   */\n  applyBehaviours(time, index) {\n    const length = this.behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.behaviours[i] && this.behaviours[i].applyBehaviour(this, time, index);\n    }\n  }\n\n  /**\n   * Adds a behaviour to the particle.\n   * @param {Behaviour} behaviour The behaviour to add\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    if (behaviour.hasOwnProperty(\"parents\")) behaviour.parents.push(this);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * Adds multiple behaviours to the particle.\n   * @param {Behaviour[]} behaviours An array of behaviours to add\n   */\n  addBehaviours(behaviours) {\n    const length = behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  /**\n   * Removes a specific behaviour from the particle.\n   * @param {Behaviour} behaviour The behaviour to remove\n   */\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      const behaviour = this.behaviours.splice(index, 1);\n      behaviour.parents = null;\n    }\n  }\n\n  /**\n   * Removes all behaviours from the particle.\n   */\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  /**\n   * Destroys the particle, removing all behaviours and setting it as dead.\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export default {\n  /**\n   * @typedef  {Object} rgbObject\n   * @property {Number} r red value\n   * @property {Number} g green value\n   * @property {Number} b blue value\n   */\n  /**\n   * converts a hex value to a rgb object\n   *\n   * @memberof Proton#Proton.Util\n   * @method hexToRgb\n   *\n   * @param {String} h any hex value, e.g. #000000 or 000000 for black\n   *\n   * @return {rgbObject}\n   */\n  hexToRgb(h) {\n    const hex16 = h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    const r = parseInt(hex16.substring(0, 2), 16);\n    const g = parseInt(hex16.substring(2, 4), 16);\n    const b = parseInt(hex16.substring(4, 6), 16);\n\n    return { r, g, b };\n  },\n\n  /**\n   * converts a rgb value to a rgb string\n   *\n   * @memberof Proton#Proton.Util\n   * @method rgbToHex\n   *\n   * @param {Object | Proton.hexToRgb} rgb a rgb object like in {@link Proton#Proton.}\n   *\n   * @return {String} rgb()\n   */\n  rgbToHex(rbg) {\n    return `rgb(${rbg.r}, ${rbg.g}, ${rbg.b})`;\n  },\n\n  getHex16FromParticle(p) {\n    return Number(p.rgb.r) * 65536 + Number(p.rgb.g) * 256 + Number(p.rgb.b);\n  }\n};\n","import Vector2D from \"./Vector2D\";\n\nexport default class Polar2D {\n  constructor(r, tha) {\n    this.r = Math.abs(r) || 0;\n    this.tha = tha || 0;\n  }\n\n  set(r, tha) {\n    this.r = r;\n    this.tha = tha;\n    return this;\n  }\n\n  setR(r) {\n    this.r = r;\n    return this;\n  }\n\n  setTha(tha) {\n    this.tha = tha;\n    return this;\n  }\n\n  copy(p) {\n    this.r = p.r;\n    this.tha = p.tha;\n    return this;\n  }\n\n  toVector() {\n    return new Vector2D(this.getX(), this.getY());\n  }\n\n  getX() {\n    return this.r * Math.sin(this.tha);\n  }\n\n  getY() {\n    return -this.r * Math.cos(this.tha);\n  }\n\n  normalize() {\n    this.r = 1;\n    return this;\n  }\n\n  equals(v) {\n    return v.r === this.r && v.tha === this.tha;\n  }\n\n  clear() {\n    this.r = 0.0;\n    this.tha = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Polar2D(this.r, this.tha);\n  }\n}\n","const Mat3 = {\n  create(mat3) {\n    const mat = new Float32Array(9);\n    if (mat3) this.set(mat3, mat);\n\n    return mat;\n  },\n\n  set(mat1, mat2) {\n    for (let i = 0; i < 9; i++) mat2[i] = mat1[i];\n\n    return mat2;\n  },\n\n  multiply(mat, mat2, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a02 = mat[2],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b00 = mat2[0],\n      b01 = mat2[1],\n      b02 = mat2[2],\n      b10 = mat2[3],\n      b11 = mat2[4],\n      b20 = mat2[6],\n      b21 = mat2[7];\n\n    mat3[0] = b00 * a00 + b01 * a10;\n    mat3[1] = b00 * a01 + b01 * a11;\n    mat3[2] = a02 * b02;\n    mat3[3] = b10 * a00 + b11 * a10;\n    mat3[4] = b10 * a01 + b11 * a11;\n    mat3[6] = b20 * a00 + b21 * a10 + a20;\n    mat3[7] = b20 * a01 + b21 * a11 + a21;\n\n    return mat3;\n  },\n\n  inverse(mat, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b01 = a11,\n      b11 = -a10,\n      b21 = a21 * a10 - a11 * a20,\n      d = a00 * b01 + a01 * b11,\n      id;\n\n    id = 1 / d;\n    mat3[0] = b01 * id;\n    mat3[1] = -a01 * id;\n    mat3[3] = b11 * id;\n    mat3[4] = a00 * id;\n    mat3[6] = b21 * id;\n    mat3[7] = (-a21 * a00 + a01 * a20) * id;\n\n    return mat3;\n  },\n\n  multiplyVec2(m, vec, mat3) {\n    let x = vec[0],\n      y = vec[1];\n\n    mat3[0] = x * m[0] + y * m[3] + m[6];\n    mat3[1] = x * m[1] + y * m[4] + m[7];\n\n    return mat3;\n  }\n};\n\nexport default Mat3;\n","import Span from \"./Span\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"./MathUtil\";\n\n/**\n * Represents an ArraySpan, a subclass of Span that works with arrays.\n * @extends Span\n */\nexport default class ArraySpan extends Span {\n  /**\n   * Creates an instance of ArraySpan.\n   * @param {Array|*|any} arr - The array or value to be converted to an array.\n   */\n  constructor(arr) {\n    super();\n    this._arr = Util.toArray(arr);\n  }\n\n  /**\n   * Gets a random value from the array.\n   * If the value is \"random\" or \"Random\", it returns a random color.\n   * @returns {*} A random value from the array or a random color.\n   */\n  getValue() {\n    const val = Util.getRandFromArray(this._arr);\n    return val === \"random\" || val === \"Random\" ? MathUtil.randomColor() : val;\n  }\n\n  /**\n   * Creates an ArraySpan instance from the given array.\n   * If the input is already an ArraySpan instance, it returns the input.\n   * @static\n   * @param {Array|ArraySpan|any} arr - The array or ArraySpan instance.\n   * @returns {ArraySpan|null} A new ArraySpan instance or null if the input is falsy.\n   */\n  static createArraySpan(arr) {\n    if (!arr) return null;\n\n    if (arr instanceof ArraySpan) return arr;\n    else return new ArraySpan(arr);\n  }\n}\n","export default class Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n\n    this.width = w;\n    this.height = h;\n\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y) {\n    if (x <= this.right && x >= this.x && y <= this.bottom && y >= this.y) return true;\n    else return false;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\n\n/**\n * Rate class for controlling particle emission rate.\n */\nexport default class Rate {\n  /**\n   * @type {Span}\n   * @private\n   */\n  numPan;\n\n  /**\n   * @type {Span}\n   * @private\n   */\n  timePan;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  startTime;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  nextTime;\n\n  /**\n   * Creates a new Rate instance.\n   * The number of particles per second emission (a [particle]/b [s]).\n   * @param {Array|number|Span} [numpan=1] - The number of particles for each emission.\n   * @param {Array|number|Span} [timepan=1] - The time interval between each emission.\n   * @example\n   * // Create a rate of 10-20 particles every 0.1-0.25 seconds\n   * new Rate(new Span(10, 20), new Span(0.1, 0.25));\n   */\n  constructor(numpan, timepan) {\n    this.numPan = Span.setSpanValue(Util.initValue(numpan, 1));\n    this.timePan = Span.setSpanValue(Util.initValue(timepan, 1));\n\n    this.startTime = 0;\n    this.nextTime = 0;\n    this.init();\n  }\n\n  /**\n   * Initializes the rate.\n   * @private\n   */\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  /**\n   * Gets the number of particles to emit based on the elapsed time.\n   * @param {number} time - The elapsed time since the last update.\n   * @returns {number} The number of particles to emit.\n   */\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.startTime = 0;\n      this.nextTime = this.timePan.getValue();\n\n      if (this.numPan.b === 1) {\n        if (this.numPan.getValue(false) > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue(true);\n      }\n    }\n\n    return 0;\n  }\n}\n","export default class Initialize {\n  reset() {}\n\n  init(emitter, particle) {\n    if (particle) {\n      this.initialize(particle);\n    } else {\n      this.initialize(emitter);\n    }\n  }\n\n  // sub class init\n  initialize(target) {}\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\n/**\n * Life class for initializing particle lifetime.\n * @extends Initialize\n */\nexport default class Life extends Initialize {\n  /**\n   * @type {Span}\n   * @private\n   */\n  lifePan;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new Life instance.\n   * @param {number|Span} a - The lifetime value or the lower bound of the lifetime range.\n   * @param {number} [b] - The upper bound of the lifetime range (if a is a number).\n   * @param {boolean} [c] - Whether to use center-based calculation (if a and b are numbers).\n   */\n  constructor(a, b, c) {\n    super();\n\n    this.lifePan = Span.setSpanValue(a, b, c);\n    this.name = \"Life\";\n  }\n\n  /**\n   * Initializes the lifetime of a target particle.\n   * @param {object} target - The target particle to initialize.\n   */\n  initialize(target) {\n    if (this.lifePan.a === Infinity) target.life = Infinity;\n    else target.life = this.lifePan.getValue();\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\n\nexport default class Zone {\n  constructor() {\n    this.vector = new Vector2D(0, 0);\n    this.random = 0;\n    this.crossType = \"dead\";\n    this.alert = true;\n  }\n\n  getPosition() {}\n\n  crossing(particle) {}\n\n  destroy() {\n    this.vector = null;\n  }\n}\n","import Zone from \"./Zone\";\n\n/**\n * Represents a point zone in a 2D space.\n * @extends Zone\n */\nexport default class PointZone extends Zone {\n  /**\n   * Creates a new PointZone.\n   * @param {number} x - The x-coordinate of the point.\n   * @param {number} y - The y-coordinate of the point.\n   */\n  constructor(x, y) {\n    super();\n\n    /**\n     * The x-coordinate of the point.\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * The y-coordinate of the point.\n     * @type {number}\n     */\n    this.y = y;\n  }\n\n  /**\n   * Gets the position of the point.\n   * @returns {Object} An object representing the position vector.\n   */\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n\n    return this.vector;\n  }\n\n  /**\n   * This method is not supported for PointZone.\n   * @param {Object} particle - The particle object (unused).\n   */\n  crossing(particle) {\n    if (this.alert) {\n      console.error(\"Sorry, PointZone does not support crossing method!\");\n      this.alert = false;\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport PointZone from \"../zone/PointZone\";\nimport Initialize from \"./Initialize\";\n\n/**\n * Position class for initializing particle positions.\n * @extends Initialize\n */\nexport default class Position extends Initialize {\n  /**\n   * @type {PointZone|any}\n   * @private\n   */\n  zone;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new Position instance.\n   * @param {PointZone|any} [zone] - The zone to use for positioning. Defaults to a new PointZone if not provided.\n   */\n  constructor(zone) {\n    super();\n    this.zone = Util.initValue(zone, new PointZone());\n    this.name = \"Position\";\n  }\n\n  /**\n   * Resets this initializer's parameters.\n   * @param {PointZone|any} [zone] - The new zone to use for positioning. Defaults to a new PointZone if not provided.\n   */\n  reset(zone) {\n    this.zone = Util.initValue(zone, new PointZone());\n  }\n\n  /**\n   * Initializes the particle's position.\n   * @param {object} target - The particle to initialize.\n   * @param {object} target.p - The particle's position object.\n   * @param {number} target.p.x - The particle's x coordinate.\n   * @param {number} target.p.y - The particle's y coordinate.\n   */\n  initialize(target) {\n    this.zone.getPosition();\n\n    target.p.x = this.zone.vector.x;\n    target.p.y = this.zone.vector.y;\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport Polar2D from \"../math/Polar2D\";\nimport MathUtil from \"../math/MathUtil\";\n\n/**\n * Velocity class for initializing particle velocities.\n * @extends Initialize\n */\nexport default class Velocity extends Initialize {\n  /**\n   * @type {Span}\n   * @private\n   */\n  rPan;\n\n  /**\n   * @type {Span}\n   * @private\n   */\n  thaPan;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new Velocity instance.\n   * @param {number|Span} [rpan] - The radial component of the velocity or its range.\n   * @param {number|Span} [thapan] - The angular component of the velocity or its range.\n   * @param {string} [type='vector'] - The type of velocity ('vector' or 'polar').\n   */\n  constructor(rpan, thapan, type) {\n    super();\n\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n\n    this.name = \"Velocity\";\n  }\n\n  /**\n   * Resets the velocity parameters.\n   * @param {number|Span} [rpan] - The radial component of the velocity or its range.\n   * @param {number|Span} [thapan] - The angular component of the velocity or its range.\n   * @param {string} [type='vector'] - The type of velocity ('vector' or 'polar').\n   */\n  reset(rpan, thapan, type) {\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n  }\n\n  /**\n   * Normalizes the velocity value.\n   * @param {number} vr - The velocity value to normalize.\n   * @returns {number} The normalized velocity value.\n   * @private\n   */\n  normalizeVelocity(vr) {\n    return vr * Proton.MEASURE;\n  }\n\n  /**\n   * Initializes the particle's velocity.\n   * @param {object} target - The particle to initialize.\n   */\n  initialize(target) {\n    if (this.type === \"p\" || this.type === \"P\" || this.type === \"polar\") {\n      const polar2d = new Polar2D(\n        this.normalizeVelocity(this.rPan.getValue()),\n        this.thaPan.getValue() * MathUtil.PI_180\n      );\n\n      target.v.x = polar2d.getX();\n      target.v.y = polar2d.getY();\n    } else {\n      target.v.x = this.normalizeVelocity(this.rPan.getValue());\n      target.v.y = this.normalizeVelocity(this.thaPan.getValue());\n    }\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\n/**\n * Mass class for initializing particle mass.\n * @extends Initialize\n */\nexport default class Mass extends Initialize {\n  /**\n   * @type {Span}\n   * @private\n   */\n  massPan;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new Mass instance.\n   * @param {number|Span} a - The mass value or the lower bound of the mass range.\n   * @param {number} [b] - The upper bound of the mass range (if a is a number).\n   * @param {boolean} [c] - Whether to use center-based calculation (if a and b are numbers).\n   */\n  constructor(a, b, c) {\n    super();\n    this.massPan = Span.setSpanValue(a, b, c);\n    this.name = \"Mass\";\n  }\n\n  /**\n   * Initializes the mass of a target particle.\n   * @param {object} target - The target particle to initialize.\n   */\n  initialize(target) {\n    target.mass = this.massPan.getValue();\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\n/**\n * Radius class for initializing particle radius.\n * @extends Initialize\n */\nexport default class Radius extends Initialize {\n  /**\n   * @type {Span}\n   */\n  radius;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new Radius instance.\n   * @param {number|Span} a - The radius value or the lower bound of the radius range.\n   * @param {number} [b] - The upper bound of the radius range (if a is a number).\n   * @param {boolean} [c] - Whether to use center-based calculation (if a and b are numbers).\n   */\n  constructor(a, b, c) {\n    super();\n    this.radius = Span.setSpanValue(a, b, c);\n    this.name = \"Radius\";\n  }\n\n  /**\n   * Resets this initializer's parameters.\n   * @param {number|Span} a - The radius value or the lower bound of the radius range.\n   * @param {number} [b] - The upper bound of the radius range (if a is a number).\n   * @param {boolean} [c] - Whether to use center-based calculation (if a and b are numbers).\n   */\n  reset(a, b, c) {\n    this.radius = Span.setSpanValue(a, b, c);\n  }\n\n  /**\n   * Initializes the particle's radius.\n   * @param {Particle} particle - The particle to initialize.\n   */\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.data.oldRadius = particle.radius;\n  }\n}\n","import Util from \"../utils/Util\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Initialize from \"./Initialize\";\n\n/**\n * Body class for initializing particle bodies.\n * @extends Initialize\n */\nexport default class Body extends Initialize {\n  /**\n   * @type {ArraySpan}\n   * @private\n   */\n  image;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new Body instance.\n   * @param {string|object|Image|HTMLImageElement|ArraySpan} image - The image source or object to use for the particle body.\n   * @param {number} [w=20] - The width of the particle body.\n   * @param {number} [h] - The height of the particle body. Defaults to the width if not provided.\n   */\n  constructor(image, w, h) {\n    super();\n\n    this.image = this.setSpanValue(image);\n    this.w = Util.initValue(w, 20);\n    this.h = Util.initValue(h, this.w);\n    this.name = \"Body\";\n  }\n\n  /**\n   * Initializes the particle's body.\n   * @param {object} particle - The particle to initialize.\n   */\n  initialize(particle) {\n    const imageTarget = this.image.getValue();\n\n    if (typeof imageTarget === \"string\") {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        src: imageTarget,\n        isInner: true,\n        inner: true\n      };\n    } else {\n      particle.body = imageTarget;\n    }\n  }\n\n  /**\n   * Sets the span value for the image.\n   * @param {string|object|Image|HTMLImageElement|ArraySpan} image - The image source or object to set as span value.\n   * @returns {ArraySpan} The ArraySpan instance.\n   * @private\n   */\n  setSpanValue(image) {\n    return image instanceof ArraySpan ? image : new ArraySpan(image);\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Util from \"../utils/Util\";\nimport ease from \"../math/ease\";\n\n/**\n * The Behaviour class is the base for the other Behaviour\n * @class\n */\nexport default class Behaviour {\n  static id = 0;\n\n  /**\n   * Create a new Behaviour instance\n   * @param {number} [life=Infinity] - The behaviour's life\n   * @param {string} [easing='easeLinear'] - The behaviour's decaying trend, for example ease.easeOutQuart\n   */\n  constructor(life, easing) {\n    /**\n     * The behaviour's life\n     * @type {number}\n     */\n    this.life = Util.initValue(life, Infinity);\n\n    /**\n     * The behaviour's easing function\n     * @type {function}\n     */\n    this.easing = ease.getEasing(easing);\n\n    /**\n     * The behaviour's current age\n     * @type {number}\n     */\n    this.age = 0;\n\n    /**\n     * The behaviour's current energy\n     * @type {number}\n     */\n    this.energy = 1;\n\n    /**\n     * Whether the behaviour is dead\n     * @type {boolean}\n     */\n    this.dead = false;\n\n    /**\n     * The behaviour's parent emitters\n     * @type {Array}\n     */\n    this.parents = [];\n\n    /**\n     * The behaviour's unique id\n     * @type {string}\n     */\n    this.id = `Behaviour_${Behaviour.id++}`;\n\n    /**\n     * The behaviour's name\n     * @type {string}\n     */\n    this.name = \"Behaviour\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   * @param {number} [life=Infinity] - This behaviour's new life\n   * @param {string} [easing='easeLinear'] - This behaviour's new easing\n   */\n  reset(life, easing) {\n    this.life = Util.initValue(life, Infinity);\n    this.easing = ease.getEasing(easing);\n  }\n\n  /**\n   * Normalize a force by 1:100\n   * @param {Proton.Vector2D} force - The force to normalize\n   * @returns {Proton.Vector2D} The normalized force\n   */\n  normalizeForce(force) {\n    return force.multiplyScalar(Proton.MEASURE);\n  }\n\n  /**\n   * Normalize a value by 1:100\n   * @param {number} value - The value to normalize\n   * @returns {number} The normalized value\n   */\n  normalizeValue(value) {\n    return value * Proton.MEASURE;\n  }\n\n  /**\n   * Initialize the behaviour's parameters for a particle\n   * @param {Proton.Particle} particle - The particle to initialize\n   */\n  initialize(particle) {}\n\n  /**\n   * Compute the behaviour's life cycle\n   * @param {Proton.Particle} particle - The particle to calculate for\n   * @param {number} time - The integrate time 1/ms\n   * @param {number} index - The particle index\n   */\n  calculate(particle, time, index) {\n    this.age += time;\n\n    if (this.age >= this.life || this.dead) {\n      this.energy = 0;\n      this.dead = true;\n      this.destroy();\n    } else {\n      const scale = this.easing(particle.age / particle.life);\n      this.energy = Math.max(1 - scale, 0);\n    }\n  }\n\n  /**\n   * Apply this behaviour to a particle\n   * @param {Proton.Particle} particle - The particle to apply the behaviour to\n   * @param {number} time - The integrate time 1/ms\n   * @param {number} index - The particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n  }\n\n  /**\n   * Destroy this behaviour\n   */\n  destroy() {\n    let i = this.parents.length;\n    while (i--) {\n      this.parents[i].removeBehaviour(this);\n    }\n\n    this.parents.length = 0;\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Force extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Force\n   *\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(fx, fy, life, easing) {\n    super(life, easing);\n\n    this.force = this.normalizeForce(new Vector2D(fx, fy));\n    this.name = \"Force\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Force\n   * @instance\n   *\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(fx, fy, life, easing) {\n    this.force = this.normalizeForce(new Vector2D(fx, fy));\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Force\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.a.add(this.force);\n  }\n}\n","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\n/**\n * Attraction behavior for particles.\n * This behaviour makes particles follow a specific target position.\n * @extends Behaviour\n */\nexport default class Attraction extends Behaviour {\n  /**\n   * Creates an instance of Attraction.\n   * @param {Vector2D} targetPosition - The attraction point coordinates.\n   * @param {number} [force=100] - The strength of the attraction force.\n   * @param {number} [radius=1000] - The radius of influence for the attraction.\n   * @param {number} [life=Infinity] - The life span of this behaviour.\n   * @param {string} [easing='ease.easeLinear'] - The easing function for this behaviour.\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(life, easing);\n\n    /**\n     * The target position for attraction.\n     * @type {Vector2D}\n     */\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n\n    /**\n     * The radius of influence for the attraction.\n     * @type {number}\n     */\n    this.radius = Util.initValue(radius, 1000);\n\n    /**\n     * The strength of the attraction force.\n     * @type {number}\n     */\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    /**\n     * The squared radius (for optimization).\n     * @type {number}\n     */\n    this.radiusSq = this.radius * this.radius;\n\n    /**\n     * The attraction force vector.\n     * @type {Vector2D}\n     */\n    this.attractionForce = new Vector2D();\n\n    /**\n     * The squared length of the attraction force.\n     * @type {number}\n     */\n    this.lengthSq = 0;\n\n    /**\n     * The name of the behaviour.\n     * @type {string}\n     */\n    this.name = \"Attraction\";\n  }\n\n  /**\n   * Resets the behaviour's parameters.\n   * @param {Vector2D} targetPosition - The new attraction point coordinates.\n   * @param {number} [force=100] - The new strength of the attraction force.\n   * @param {number} [radius=1000] - The new radius of influence for the attraction.\n   * @param {number} [life=Infinity] - The new life span of this behaviour.\n   * @param {string} [easing='ease.easeLinear'] - The new easing function for this behaviour.\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Applies this behaviour to a particle.\n   * @param {Particle} particle - The particle to apply the behaviour to.\n   * @param {number} time - The current simulation time.\n   * @param {number} index - The index of the particle.\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.p);\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (this.lengthSq > 0.00004 && this.lengthSq < this.radiusSq) {\n      this.attractionForce.normalize();\n      this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.multiplyScalar(this.force);\n\n      particle.a.add(this.attractionForce);\n    }\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class RandomDrift extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias RandomDrift\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} time The time of the drift\n   * @property {String} name The Behaviour name\n   */\n  constructor(driftX, driftY, delay, life, easing) {\n    super(life, easing);\n\n    this.reset(driftX, driftY, delay);\n    this.time = 0;\n    this.name = \"RandomDrift\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(driftX, driftY, delay, life, easing) {\n    this.panFoce = new Vector2D(driftX, driftY);\n    this.panFoce = this.normalizeForce(this.panFoce);\n    this.delay = delay;\n\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.data.time = 0;\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.data.time += time;\n\n    if (particle.data.time >= this.delay) {\n      particle.a.addXY(\n        MathUtil.randomAToB(-this.panFoce.x, this.panFoce.x),\n        MathUtil.randomAToB(-this.panFoce.y, this.panFoce.y)\n      );\n\n      particle.data.time = 0;\n    }\n  }\n}\n","import Force from \"./Force\";\n\nexport default class Gravity extends Force {\n  /**\n   * @memberof! Proton#\n   * @augments Proton#Proton.Force\n   * @constructor\n   * @alias Proton.Gravity\n   *\n   * @param {Number} g \t\t\t\t\t\t\tGravity\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(g, life, easing) {\n    super(0, g, life, easing);\n    this.name = \"Gravity\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Gravity\n   * @instance\n   *\n   * @param {Number} g \t\t\t\t\t\t\tGravity\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(g, life, easing) {\n    super.reset(0, g, life, easing);\n  }\n}\n","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Collision extends Behaviour {\n  /**\n   * The callback after collision\n   *\n   * @callback Callback\n   *\n   * @param {Proton.Particle} particle\n   * @param {Proton.Paritcle} otherParticle\n   */\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Collision\n   *\n   * @todo add description to mass\n   *\n   * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n   * @param {Boolean} \t\t[mass=true]\n   * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(emitter, mass, callback, life, easing) {\n    super(life, easing);\n    this.reset(emitter, mass, callback);\n    this.newPool = [];\n    this.pool = [];\n    this.name = \"Collision\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @memberof Proton#Proton.Collision\n   * @method reset\n   * @instance\n   *\n   * @todo add description to mass\n   *\n   * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n   * @param {Boolean} \t\t[mass=true]\n   * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n   * @param {Number} \t\t\t[life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(emitter, mass, callback, life, easing) {\n    this.emitter = Util.initValue(emitter, null);\n    this.mass = Util.initValue(mass, true);\n    this.callback = Util.initValue(callback, null);\n\n    this.collisionPool = [];\n    this.delta = new Vector2D();\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Collision\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.emitter) {\n      Util.sliceArray(this.emitter.particles, index, this.newPool);\n    } else {\n      Util.sliceArray(this.pool, index, this.newPool);\n    }\n\n    const length = this.newPool.length;\n    let otherParticle;\n    let lengthSq;\n    let overlap;\n    let totalMass;\n    let averageMass1, averageMass2;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      otherParticle = this.newPool[i];\n\n      if (otherParticle !== particle) {\n        this.delta.copy(otherParticle.p);\n        this.delta.sub(particle.p);\n\n        lengthSq = this.delta.lengthSq();\n        const distance = particle.radius + otherParticle.radius;\n\n        if (lengthSq <= distance * distance) {\n          overlap = distance - Math.sqrt(lengthSq);\n          overlap += 0.5;\n\n          totalMass = particle.mass + otherParticle.mass;\n          averageMass1 = this.mass ? otherParticle.mass / totalMass : 0.5;\n          averageMass2 = this.mass ? particle.mass / totalMass : 0.5;\n\n          particle.p.add(\n            this.delta\n              .clone()\n              .normalize()\n              .multiplyScalar(overlap * -averageMass1)\n          );\n          otherParticle.p.add(this.delta.normalize().multiplyScalar(overlap * averageMass2));\n\n          this.callback && this.callback(particle, otherParticle);\n        }\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class CrossZone extends Behaviour {\n  /**\n   * Defines what happens if the particles come to the end of the specified zone\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.CrossZone\n   *\n   * @param {Proton.Zone} zone \t\t\t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n   * @param {String} \t\t[crossType=dead] \t\t\twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n   * @param {Number} \t\t[life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} \t\t[easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(zone, crossType, life, easing) {\n    super(life, easing);\n\n    this.reset(zone, crossType);\n    this.name = \"CrossZone\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.CrossZone\n   * @instance\n   *\n   * @param {Proton.Zone} zone \t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n   * @param {String} \t\t[crossType=dead] \twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n   * @param {Number} \t\t[life=Infinity] \tthis behaviour's life\n   * @param {String} \t\t[easing=easeLinear]\tthis behaviour's easing\n   */\n  reset(zone, crossType, life, easing) {\n    this.zone = zone;\n    this.zone.crossType = Util.initValue(crossType, \"dead\");\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.CrossZone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    this.zone.crossing(particle);\n  }\n}\n","import Util from \"../utils/Util\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\n/**\n * Alpha behaviour for controlling particle opacity over time.\n * @extends Behaviour\n */\nexport default class Alpha extends Behaviour {\n  /**\n   * @type {boolean}\n   * @private\n   */\n  same;\n\n  /**\n   * @type {Span}\n   * @private\n   */\n  a;\n\n  /**\n   * @type {Span}\n   * @private\n   */\n  b;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new Alpha instance.\n   * @param {number|Span} [a=1] - The initial alpha value or range.\n   * @param {number|Span} [b] - The final alpha value or range. If not provided, it will be the same as 'a'.\n   * @param {number} [life=Infinity] - This behaviour's life.\n   * @param {string} [easing='easeLinear'] - This behaviour's easing function.\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Alpha\";\n  }\n\n  /**\n   * Resets this behaviour's parameters.\n   * @param {number|Span} [a=1] - The initial alpha value or range.\n   * @param {number|Span} [b] - The final alpha value or range. If not provided, it will be the same as 'a'.\n   * @param {number} [life] - This behaviour's life.\n   * @param {string} [easing] - This behaviour's easing function.\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the particle's alpha values.\n   * @param {Particle} particle - The particle to initialize.\n   */\n  initialize(particle) {\n    particle.data.alphaA = this.a.getValue();\n\n    if (this.same) particle.data.alphaB = particle.data.alphaA;\n    else particle.data.alphaB = this.b.getValue();\n  }\n\n  /**\n   * Applies the alpha behaviour to the particle.\n   * @param {Particle} particle - The particle to apply the behaviour to.\n   * @param {number} time - The current simulation time.\n   * @param {number} index - The index of the particle.\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    particle.alpha = particle.data.alphaB + (particle.data.alphaA - particle.data.alphaB) * this.energy;\n\n    if (particle.alpha < 0.001) particle.alpha = 0;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Behaviour from \"./Behaviour\";\n\n/**\n * Scale behaviour for controlling particle size over time.\n * @extends Behaviour\n */\nexport default class Scale extends Behaviour {\n  /**\n   * @type {boolean}\n   * @private\n   */\n  same;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new Scale instance.\n   * @param {number|Span} [a=1] - The initial scale value or range.\n   * @param {number|Span} [b] - The final scale value or range. If not provided, it will be the same as 'a'.\n   * @param {number} [life=Infinity] - This behaviour's life.\n   * @param {string} [easing='easeLinear'] - This behaviour's easing function.\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Scale\";\n  }\n\n  /**\n   * Resets this behaviour's parameters.\n   * @param {number|Span} a - The initial scale value or range.\n   * @param {number|Span} [b] - The final scale value or range. If not provided, it will be the same as 'a'.\n   * @param {number} [life] - This behaviour's life.\n   * @param {string} [easing] - This behaviour's easing function.\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the particle's scale values.\n   * @param {Particle} particle - The particle to initialize.\n   */\n  initialize(particle) {\n    particle.data.scaleA = this.a.getValue();\n    particle.data.oldRadius = particle.radius;\n    particle.data.scaleB = this.same ? particle.data.scaleA : this.b.getValue();\n  }\n\n  /**\n   * Applies the scale behaviour to the particle.\n   * @param {Particle} particle - The particle to apply the behaviour to.\n   * @param {number} time - The current simulation time.\n   * @param {number} index - The index of the particle.\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.scale = particle.data.scaleB + (particle.data.scaleA - particle.data.scaleB) * this.energy;\n\n    if (particle.scale < 0.0001) particle.scale = 0;\n    particle.radius = particle.data.oldRadius * particle.scale;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Behaviour from \"./Behaviour\";\n\n/**\n * Rotate behaviour for controlling particle rotation.\n * @extends Behaviour\n */\nexport default class Rotate extends Behaviour {\n  /**\n   * @type {boolean}\n   * @private\n   */\n  same;\n\n  /**\n   * @type {Span}\n   * @private\n   */\n  a;\n\n  /**\n   * @type {Span}\n   * @private\n   */\n  b;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  style;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new Rotate instance.\n   * @param {string|number|Span} [influence='Velocity'] - The rotation's influence or initial rotation.\n   * @param {string|number|Span} [b] - The final rotation value or range.\n   * @param {string} [style='to'] - The style of rotation ('to' or 'add').\n   * @param {number} [life=Infinity] - This behaviour's life.\n   * @param {string} [easing='easeLinear'] - This behaviour's easing function.\n   */\n  constructor(influence, b, style, life, easing) {\n    super(life, easing);\n\n    this.reset(influence, b, style);\n    this.name = \"Rotate\";\n  }\n\n  /**\n   * Resets this behaviour's parameters.\n   * @param {string|number|Span} [a='Velocity'] - The rotation's influence or initial rotation.\n   * @param {string|number|Span} [b] - The final rotation value or range.\n   * @param {string} [style='to'] - The style of rotation ('to' or 'add').\n   * @param {number} [life] - This behaviour's life.\n   * @param {string} [easing] - This behaviour's easing function.\n   */\n  reset(a, b, style, life, easing) {\n    this.same = b === null || b === undefined;\n\n    this.a = Span.setSpanValue(Util.initValue(a, \"Velocity\"));\n    this.b = Span.setSpanValue(Util.initValue(b, 0));\n    this.style = Util.initValue(style, \"to\");\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour's parameters for a particle.\n   * @param {object} particle - The particle to initialize.\n   * @param {number} particle.rotation - The particle's rotation.\n   * @param {object} particle.data - The particle's data object.\n   */\n  initialize(particle) {\n    particle.rotation = this.a.getValue();\n    particle.data.rotationA = this.a.getValue();\n\n    if (!this.same) particle.data.rotationB = this.b.getValue();\n  }\n\n  /**\n   * Applies this behaviour to a particle.\n   * @param {object} particle - The particle to apply the behaviour to.\n   * @param {number} time - The integrate time (1/ms).\n   * @param {number} index - The particle index.\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    if (!this.same) {\n      if (this.style === \"to\" || this.style === \"TO\" || this.style === \"_\") {\n        particle.rotation +=\n          particle.data.rotationB + (particle.data.rotationA - particle.data.rotationB) * this.energy;\n      } else {\n        particle.rotation += particle.data.rotationB;\n      }\n    } else if (this.a.a === \"V\" || this.a.a === \"Velocity\" || this.a.a === \"v\") {\n      // beta...\n      particle.rotation = particle.getDirection();\n    }\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Color extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Color\n   *\n   * @param {Proton.ArraySpan | String} [a] the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} [b] the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Color\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.a = ArraySpan.createArraySpan(a);\n    this.b = ArraySpan.createArraySpan(b);\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.color = this.a.getValue();\n    particle.data.colorA = ColorUtil.hexToRgb(particle.color);\n\n    if (this.b) particle.data.colorB = ColorUtil.hexToRgb(this.b.getValue());\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.b) {\n      this.calculate(particle, time, index);\n\n      particle.rgb.r = particle.data.colorB.r + (particle.data.colorA.r - particle.data.colorB.r) * this.energy;\n      particle.rgb.g = particle.data.colorB.g + (particle.data.colorA.g - particle.data.colorB.g) * this.energy;\n      particle.rgb.b = particle.data.colorB.b + (particle.data.colorA.b - particle.data.colorB.b) * this.energy;\n\n      particle.rgb.r = particle.rgb.r << 0;\n      particle.rgb.g = particle.rgb.g << 0;\n      particle.rgb.b = particle.rgb.b << 0;\n    } else {\n      particle.rgb.r = particle.data.colorA.r;\n      particle.rgb.g = particle.data.colorA.g;\n      particle.rgb.b = particle.data.colorA.b;\n    }\n  }\n}\n","import MathUtil from \"../math/MathUtil\";\nimport Vector2D from \"../math/Vector2D\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nconst CHANGING = \"changing\";\n\nexport default class Cyclone extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Cyclone\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(angle, force, life, easing) {\n    super(life, easing);\n    this.setAngleAndForce(angle, force);\n    this.name = \"Cyclone\";\n  }\n\n  setAngleAndForce(angle, force) {\n    this.force = CHANGING;\n    this.angle = MathUtil.PI / 2;\n\n    if (angle === \"right\") {\n      this.angle = MathUtil.PI / 2;\n    } else if (angle === \"left\") {\n      this.angle = -MathUtil.PI / 2;\n    } else if (angle === \"random\") {\n      this.angle = \"random\";\n    } else if (angle instanceof Span) {\n      this.angle = \"span\";\n      this.span = angle;\n    } else if (angle) {\n      this.angle = angle;\n    }\n\n    if (\n      String(force).toLowerCase() === \"changing\" ||\n      String(force).toLowerCase() === \"chang\" ||\n      String(force).toLowerCase() === \"auto\"\n    ) {\n      this.force = CHANGING;\n    } else if (force) {\n      this.force = force;\n    }\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(angle, force, life, easing) {\n    this.angle = MathUtil.PI / 2;\n    this.setAngleAndForce(angle, force);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    if (this.angle === \"random\") {\n      particle.data.cangle = MathUtil.randomAToB(-MathUtil.PI, MathUtil.PI);\n    } else if (this.angle === \"span\") {\n      particle.data.cangle = this.span.getValue();\n    }\n\n    particle.data.cyclone = new Vector2D(0, 0);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    let length;\n    let gradient = particle.v.getGradient();\n    if (this.angle === \"random\" || this.angle === \"span\") {\n      gradient += particle.data.cangle;\n    } else {\n      gradient += this.angle;\n    }\n\n    if (this.force === CHANGING) {\n      length = particle.v.length() / 100;\n    } else {\n      length = this.force;\n    }\n\n    particle.data.cyclone.x = length * Math.cos(gradient);\n    particle.data.cyclone.y = length * Math.sin(gradient);\n    particle.data.cyclone = this.normalizeForce(particle.data.cyclone);\n    particle.a.add(particle.data.cyclone);\n  }\n}\n","import Attraction from \"./Attraction\";\n\n/**\n * The opposite of Attraction - turns the force\n *\n * @class\n * @extends Proton.Attraction\n * @memberof! Proton#\n * @alias Proton.Repulsion\n */\nexport default class Repulsion extends Attraction {\n  /**\n   * Creates a new Repulsion behaviour instance\n   *\n   * @constructor\n   * @param {Proton.Vector2D} targetPosition - The repulsion point coordinates\n   * @param {number} [force=100] - The strength of the repulsion force\n   * @param {number} [radius=1000] - The radius of influence for the repulsion\n   * @param {number} [life=Infinity] - The behaviour's life\n   * @param {string} [easing='easeLinear'] - The behaviour's easing function\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(targetPosition, force, radius, life, easing);\n\n    /**\n     * The strength of the repulsion force\n     * @type {number}\n     */\n    this.force *= -1;\n\n    /**\n     * The name of the behaviour\n     * @type {string}\n     */\n    this.name = \"Repulsion\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @param {Proton.Vector2D} targetPosition - The new repulsion point coordinates\n   * @param {number} [force=100] - The new strength of the repulsion force\n   * @param {number} [radius=1000] - The new radius of influence for the repulsion\n   * @param {number} [life=Infinity] - The new behaviour's life\n   * @param {string} [easing='easeLinear'] - The new behaviour's easing function\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    super.reset(targetPosition, force, radius, life, easing);\n    this.force *= -1;\n  }\n}\n","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class GravityWell extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias GravityWell\n   *\n   * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n   * @param {Number} [force=100]\t\t\t\t\tThe force\n   * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n   * @param {String} [easing=easeLinear]\tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(centerPoint, force, life, easing) {\n    super(life, easing);\n\n    this.distanceVec = new Vector2D();\n    this.centerPoint = Util.initValue(centerPoint, new Vector2D());\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.name = \"GravityWell\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#GravityWell\n   * @instance\n   *\n   * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n   * @param {Number} [force=100]\t\t\t\t\tThe force\n   * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n   * @param {String} [easing=easeLinear]\tthis behaviour's easing\n   */\n  reset(centerPoint, force, life, easing) {\n    this.distanceVec = new Vector2D();\n    this.centerPoint = Util.initValue(centerPoint, new Vector2D());\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * @inheritdoc\n   */\n  initialize(particle) {}\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#GravityWell\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.distanceVec.set(this.centerPoint.x - particle.p.x, this.centerPoint.y - particle.p.y);\n    const distanceSq = this.distanceVec.lengthSq();\n\n    if (distanceSq !== 0) {\n      const distance = this.distanceVec.length();\n      const factor = (this.force * time) / (distanceSq * distance);\n\n      particle.v.x += factor * this.distanceVec.x;\n      particle.v.y += factor * this.distanceVec.y;\n    }\n  }\n}\n","import PropUtil from \"../utils/PropUtil\";\nimport Initialize from \"./Initialize\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default {\n  initialize(emitter, particle, initializes) {\n    const length = initializes.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      if (initializes[i] instanceof Initialize) {\n        initializes[i].init(emitter, particle);\n      } else {\n        this.init(emitter, particle, initializes[i]);\n      }\n    }\n\n    this.bindEmitter(emitter, particle);\n  },\n\n  // init\n  init(emitter, particle, initialize) {\n    PropUtil.setProp(particle, initialize);\n    PropUtil.setVectorVal(particle, initialize);\n  },\n\n  bindEmitter(emitter, particle) {\n    if (emitter.bindEmitter) {\n      particle.p.add(emitter.p);\n      particle.v.add(emitter.v);\n      particle.a.add(emitter.a);\n      particle.v.rotate(MathUtil.degreeTransform(emitter.rotation));\n    }\n  }\n};\n","import Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\nimport Particle from \"../core/Particle\";\nimport EventDispatcher from \"../events/EventDispatcher\";\n\nimport Rate from \"../initialize/Rate\";\nimport InitializeUtil from \"../initialize/InitializeUtil\";\n\nexport default class Emitter extends Particle {\n  /**\n   * You can use this emit particles.\n   *\n   * It will dispatch follow events:\n   * PARTICLE_CREATED\n   * PARTICLE_UPDATA\n   * PARTICLE_DEAD\n   *\n   * @class Emitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   * for example {damping:0.01,bindEmitter:false}\n   */\n  constructor(conf = {}) {\n    super(conf);\n\n    this.particles = [];\n    this.behaviours = [];\n    this.initializes = [];\n\n    this.emitTime = 0;\n    this.emitSpeed = 0;\n    this.totalTime = -1;\n\n    /**\n     * The friction coefficient for all particle emit by This;\n     * @property damping\n     * @type {Number}\n     * @default 0.006\n     */\n    this.damping = 0.006;\n\n    /**\n     * If bindEmitter the particles can bind this emitter's property;\n     * @property bindEmitter\n     * @type {Boolean}\n     * @default true\n     */\n    this.bindEmitter = true;\n\n    /**\n     * The number of particles per second emit (a [particle]/b [s]);\n     * @property rate\n     * @type {Rate}\n     * @default Rate(1, .1)\n     */\n    this.rate = new Rate(1, 0.1);\n\n    this.name = \"Emitter\";\n    this.id = Puid.id(this.name);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   * @param {Number | String} [totalTime] begin emit time;\n   * @param {String | boolean} [life] the life of this emitter\n   */\n  emit(totalTime, life) {\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = Util.initValue(totalTime, Infinity);\n\n    if (life === true || life === \"life\" || life === \"destroy\") {\n      this.life = totalTime === \"once\" ? 1 : this.totalTime;\n    } else if (!isNaN(life)) {\n      this.life = life;\n    }\n    this.rate.init();\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this.totalTime = -1;\n    this.emitTime = 0;\n    this.stoped = true;\n  }\n\n  preEmit(time) {\n    let oldStoped = this.stoped;\n    let oldEmitTime = this.emitTime;\n    let oldTotalTime = this.totalTime;\n\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = time;\n    this.rate.init();\n\n    const step = 0.0167;\n    while (time > step) {\n      time -= step;\n      this.update(step);\n    }\n\n    this.stoped = oldStoped;\n    this.emitTime = oldEmitTime + Math.max(time, 0);\n    this.totalTime = oldTotalTime;\n  }\n\n  /**\n   * remove current all particles\n   * @method removeAllParticles\n   */\n  removeAllParticles() {\n    const particles = this.particles;\n    const len = particles.length;\n    \n    // Just mark all as dead in a tight loop\n    for (let i = 0; i < len; i++) {\n      particles[i].dead = true;\n    }\n    \n    // Don't actually remove from array here - that will happen in next integrate() call\n  }\n\n  /**\n   * add initialize to this emitter\n   * @method addSelfInitialize\n   */\n  addSelfInitialize(initialize) {\n    if (initialize[\"init\"]) {\n      initialize.init(this);\n    } else {\n      // this.initAll();\n    }\n  }\n\n  /**\n   * add the Initialize to particles;\n   *\n   * you can use initializes array:for example emitter.addInitialize(initialize1,initialize2,initialize3);\n   * @method addInitialize\n   * @param {Initialize} initialize like this new Radius(1, 12)\n   */\n  addInitialize(...rest) {\n    let i = rest.length;\n    while (i--) this.initializes.push(rest[i]);\n  }\n\n  /**\n   * remove the Initialize\n   * @method removeInitialize\n   * @param {Initialize} initialize a initialize\n   */\n  removeInitialize(initializer) {\n    const index = this.initializes.indexOf(initializer);\n    if (index > -1) this.initializes.splice(index, 1);\n  }\n\n  /**\n   * remove all Initializes\n   * @method removeInitializers\n   */\n  removeAllInitializers() {\n    Util.emptyArray(this.initializes);\n  }\n\n  /**\n   * add the Behaviour to particles;\n   *\n   * you can use Behaviours array:emitter.addBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addBehaviour\n   * @param {Behaviour} behaviour like this new Color('random')\n   */\n  addBehaviour(...rest) {\n    let i = arguments.length;\n    while (i--) {\n      let behaviour = rest[i];\n      this.behaviours.push(behaviour);\n      if (behaviour.parents) behaviour.parents.push(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour\n   * @method removeBehaviour\n   * @param {Behaviour} behaviour a behaviour\n   */\n  removeBehaviour(behaviour) {\n    let index = this.behaviours.indexOf(behaviour);\n    this.behaviours.splice(index, 1);\n\n    if (behaviour.parents) {\n      index = behaviour.parents.indexOf(behaviour);\n      behaviour.parents.splice(index, 1);\n    }\n\n    return index;\n  }\n\n  /**\n   * remove all behaviours\n   * @method removeAllBehaviours\n   */\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  // emitter update\n  update(time) {\n    this.age += time;\n    if (this.age >= this.life || this.dead) {\n      this.destroy();\n      return;\n    }\n\n    this.emitting(time);\n    this.integrate(time);\n  }\n\n  integrate(time) {\n    if (!this.parent) return;\n\n    const damping = 1 - this.damping;\n    this.parent.integrator.calculate(this, time, damping);\n\n    // Optimization for 500k particles: Use fast iteration with minimal GC impact\n    const particles = this.particles;\n    const length = particles.length;\n    const parent = this.parent;\n    const pool = parent.pool;\n    const integrator = parent.integrator;\n    const shouldDispatchUpdates = Boolean(this.parent || this.bindEvent);\n    \n    // Optimization: Use swap-and-pop method for removing dead particles\n    // This is much faster than splice for large arrays\n    let aliveCount = length;\n    let i = 0;\n\n    // Single-pass particle update with efficient removal\n    while (i < aliveCount) {\n      const particle = particles[i];\n      \n      // Fast update and check for dead particles\n      particle.update(time, i);\n      integrator.calculate(particle, time, damping);\n      \n      // Dispatch update events only if needed and not too many particles\n      // Skip event dispatching for extremely large particle counts\n      if (shouldDispatchUpdates && length < 10000) {\n        this.dispatch(\"PARTICLE_UPDATE\", particle);\n      }\n      \n      // Check if particle is dead\n      if (particle.dead) {\n        // Dispatch death events only when needed and not too many particles\n        if (shouldDispatchUpdates && length < 10000) {\n          this.dispatch(\"PARTICLE_DEAD\", particle);\n        }\n        \n        // Fast removal: swap with the last alive particle and decrement counter\n        // This avoids expensive array splicing\n        aliveCount--;\n        if (i < aliveCount) {\n          // Only swap if this isn't already the last particle\n          particles[i] = particles[aliveCount];\n          particles[aliveCount] = particle;\n          \n          // Return to pool\n          pool.expire(particle);\n          continue; // Don't increment i, process the swapped particle\n        } else {\n          // Last particle case\n          pool.expire(particle);\n        }\n      }\n      i++;\n    }\n    \n    // If we have dead particles at the end, remove them all at once\n    if (aliveCount < length) {\n      particles.length = aliveCount; // Truncate the array (much faster than multiple splices)\n    }\n  }\n\n  dispatch(event, target) {\n    // Optimize by skipping work if no listeners\n    if (!this.parent && !this.bindEvent) return;\n    \n    // For performance with many particles, only dispatch certain events\n    if (this.particles && this.particles.length > 50000) {\n      // With very large particle counts, only dispatch critical events\n      if (event !== \"PARTICLE_CREATED\" && event !== \"PARTICLE_DEAD\") {\n        return;\n      }\n    }\n    \n    this.parent && this.parent.dispatchEvent(event, target);\n    this.bindEvent && this.dispatchEvent(event, target);\n  }\n\n  emitting(time) {\n    if (this.stoped) return;\n\n    // Maximum particles to emit in a single frame to prevent lag spikes\n    const MAX_EMIT_PER_FRAME = 10000;\n\n    // Direct property access for performance\n    let emitTime = this.emitTime;\n    const totalTime = this.totalTime;\n    \n    if (totalTime === \"none\") {\n      this.emitTime = emitTime + time;\n      return;\n    } \n    \n    if (totalTime === \"once\") {\n      // Fast path for \"once\" emission\n      let numToEmit = this.rate.getValue(99999);\n      \n      // Cap emission count to prevent frame drops\n      if (numToEmit > MAX_EMIT_PER_FRAME) {\n        // Log warning only in development if trying to emit too many at once\n        if (process && process.env && process.env.NODE_ENV === 'development') {\n          console.warn(`Attempting to emit ${numToEmit} particles at once, capped to ${MAX_EMIT_PER_FRAME}`);\n        }\n        numToEmit = MAX_EMIT_PER_FRAME;\n      }\n      \n      if (numToEmit <= 0) return;\n      \n      // Cache emission speed and emit particles\n      this.emitSpeed = numToEmit;\n      \n      // Use the optimized method for bulk creation\n      this._fastCreateParticles(numToEmit);\n      \n      // Mark as completed\n      this.totalTime = \"none\";\n      return;\n    }\n    \n    // Regular emission logic - extreme optimization\n    emitTime += time;\n    this.emitTime = emitTime;\n    \n    if (emitTime < totalTime) {\n      // Get particle count using rate\n      let numToEmit = this.rate.getValue(time);\n      \n      if (numToEmit <= 0) return;\n      \n      // Cap emission to prevent lag spikes\n      if (numToEmit > MAX_EMIT_PER_FRAME) {\n        numToEmit = MAX_EMIT_PER_FRAME;\n      }\n      \n      this.emitSpeed = numToEmit;\n      \n      // Use fastest particle creation method\n      this._fastCreateParticles(numToEmit);\n    }\n  }\n\n  /**\n   * Ultra-fast particle creation - no optional parameters, minimal overhead\n   * @param {Number} count - Number of particles to create\n   * @private\n   */\n  _fastCreateParticles(count) {\n    // Early exit for zero count\n    if (count <= 0 || !this.parent) return;\n    \n    // Direct property access - avoid repeated lookups\n    const parent = this.parent;\n    const pool = parent.pool;\n    const particlesArr = this.particles;\n    const initializes = this.initializes;\n    const behaviours = this.behaviours;\n    \n    // Emergency circuit breaker - prevent memory issues when too many particles\n    const MAX_SAFE_PARTICLES = 1000000; // 1 million particles max\n    if (particlesArr.length + count > MAX_SAFE_PARTICLES) {\n      count = Math.max(0, MAX_SAFE_PARTICLES - particlesArr.length);\n      if (count <= 0) return; // Already at max capacity\n    }\n    \n    // Use faster bulk retrieval if available\n    let particles;\n    if (pool.getBulk) {\n      // Get multiple particles at once from pool\n      particles = pool.getBulk(Particle, count);\n      \n      // Fast-path batch initialization\n      this._initializeParticlesBulk(particles, initializes, behaviours);\n    } else {\n      // Fast path direct initialization - optimized for huge particle counts\n      this._createParticlesLoop(count, pool, particlesArr, initializes, behaviours);\n    }\n  }\n  \n  /**\n   * High-speed loop for creating many particles\n   * @private\n   */\n  _createParticlesLoop(count, pool, particlesArr, initializes, behaviours) {\n    // Pre-calculate array growth to avoid resizing\n    const newLength = particlesArr.length + count;\n    \n    // Handle array growth efficiently for large particle counts\n    if (particlesArr.length === 0 && count > 10000) {\n      try {\n        // Try to preallocate the array with correct capacity\n        particlesArr.length = count;\n        particlesArr.length = 0; // Reset but keep capacity\n      } catch (e) {\n        // Ignore if this optimization isn't supported\n      }\n    }\n  \n    // Cache values for dispatch check\n    const shouldDispatch = (this.parent || this.bindEvent) && particlesArr.length < 10000;\n    const dispatchFn = shouldDispatch ? this.dispatch.bind(this) : null;\n    \n    // Minimal particle creation loop - optimized for speed\n    let i = 0;\n    let particle;\n    \n    // Using while loop (faster than for loop in many JS engines)\n    while (i < count) {\n      // Get from pool\n      particle = pool.get(Particle);\n      \n      // Fastest possible reset\n      particle.reset();\n      \n      // Direct initialize call with cached values\n      InitializeUtil.initialize(this, particle, initializes);\n      \n      // Add behaviors\n      particle.addBehaviours(behaviours);\n      particle.parent = this;\n      \n      // Push to array\n      particlesArr.push(particle);\n      \n      // Only dispatch if absolutely necessary\n      if (dispatchFn) {\n        dispatchFn(\"PARTICLE_CREATED\", particle);\n      }\n      \n      i++;\n    }\n  }\n  \n  /**\n   * Bulk initialization for particles - more efficient for large batches\n   * @private\n   */\n  _initializeParticlesBulk(particles, initializes, behaviours) {\n    const count = particles.length;\n    const particlesArr = this.particles;\n    \n    // Cache values for dispatch check\n    const shouldDispatch = (this.parent || this.bindEvent) && particlesArr.length < 10000;\n    const dispatchFn = shouldDispatch ? this.dispatch.bind(this) : null;\n    \n    // One-time binding of this context for the loop\n    const emitter = this;\n    \n    // Bulk initialize particles\n    for (let i = 0; i < count; i++) {\n      const particle = particles[i];\n      \n      // Initialize the particle directly\n      InitializeUtil.initialize(emitter, particle, initializes);\n      \n      // Set properties\n      particle.parent = emitter;\n      \n      // Add behaviors - use direct array if possible for better performance\n      particle.addBehaviours(behaviours);\n      \n      // Add to particles array\n      particlesArr.push(particle);\n      \n      // Only dispatch if necessary\n      if (dispatchFn) {\n        dispatchFn(\"PARTICLE_CREATED\", particle);\n      }\n    }\n  }\n\n  /**\n   * High-performance batch particle creation for large quantities\n   * @param {Number} length - Number of particles to create\n   * @param {Object|Array} [initialize] - Initialization parameters\n   * @param {Object|Array} [behaviour] - Behavior parameters\n   */\n  createParticlesBatch(length, initialize, behaviour) {\n    // Immediate redirect to fast creation when no custom initializers/behaviors\n    if (!initialize && !behaviour) {\n      this._fastCreateParticles(length);\n      return;\n    }\n    \n    // For huge batches, split into smaller chunks\n    const BATCH_SIZE = 5000;\n    \n    if (length > BATCH_SIZE && length > 10000) {\n      // Process in chunks for very large particle counts\n      for (let i = 0; i < length; i += BATCH_SIZE) {\n        const chunkSize = Math.min(BATCH_SIZE, length - i);\n        this._createParticleChunk(chunkSize, initialize, behaviour);\n      }\n    } else {\n      // Process all at once for smaller batches\n      this._createParticleChunk(length, initialize, behaviour);\n    }\n  }\n  \n  /**\n   * Internal method to create a chunk of particles\n   * @private\n   */\n  _createParticleChunk(length, initialize, behaviour) {\n    // Early exit for zero particles\n    if (length <= 0) return;\n    \n    // Cache values for reuse\n    const parent = this.parent;\n    const pool = parent.pool;\n    const particlesArr = this.particles;\n    \n    // Check if we'd exceed max safe count\n    const MAX_SAFE_PARTICLES = 1000000; // 1 million particles max\n    if (particlesArr.length + length > MAX_SAFE_PARTICLES) {\n      length = Math.max(0, MAX_SAFE_PARTICLES - particlesArr.length);\n      if (length <= 0) return;\n    }\n    \n    // Only calculate this once outside the loop\n    const shouldDispatch = (this.parent || this.bindEvent) && particlesArr.length < 10000;\n    \n    // Handle initializes/behaviors\n    const initializes = initialize ? Util.toArray(initialize) : this.initializes;\n    const behaviours = behaviour ? Util.toArray(behaviour) : this.behaviours;\n    \n    // Pre-bind functions and cache properties for the loop\n    const dispatchFn = shouldDispatch ? this.dispatch.bind(this) : null;\n    const emitter = this;\n    \n    // Pre-allocate capacity if possible\n    if (Array.prototype.reserve) {\n      const newCapacity = particlesArr.length + length;\n      if (particlesArr.capacity < newCapacity) {\n        particlesArr.reserve(newCapacity);\n      }\n    }\n    \n    // Creation loop - unrolled for performance\n    let i = 0;\n    let particle;\n    \n    // Fast loop with minimal overhead\n    while (i < length) {\n      particle = pool.get(Particle);\n      \n      // Fastest reset possible\n      particle.reset();\n      \n      // Initialize using cached values\n      InitializeUtil.initialize(emitter, particle, initializes);\n      \n      // Add behaviors\n      particle.addBehaviours(behaviours);\n      particle.parent = emitter;\n      \n      // Add to particles array\n      particlesArr.push(particle);\n      \n      // Dispatch only if needed\n      if (dispatchFn) {\n        dispatchFn(\"PARTICLE_CREATED\", particle);\n      }\n      \n      i++;\n    }\n  }\n\n  /**\n   * Creates a single particle - now optimized for performance\n   * but batch methods should be preferred for multiple particles\n   */\n  createParticle(initialize, behaviour) {\n    // Fast path when we have a parent\n    if (!this.parent) return null;\n    \n    const particle = this.parent.pool.get(Particle);\n    \n    // Direct setup\n    particle.reset();\n    \n    // Handle initializes/behaviors\n    const initializes = initialize ? Util.toArray(initialize) : this.initializes;\n    const behaviours = behaviour ? Util.toArray(behaviour) : this.behaviours;\n    \n    // Initialize and add behaviors\n    InitializeUtil.initialize(this, particle, initializes);\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n\n    // Add to array - directly push to avoid function call\n    this.particles.push(particle);\n    \n    // Only dispatch if needed and not too many particles\n    if ((this.parent || this.bindEvent) && this.particles.length < 10000) {\n      this.dispatch(\"PARTICLE_CREATED\", particle);\n    }\n\n    return particle;\n  }\n\n  /**\n   * Sets up a particle with initialization and behavior.\n   * @deprecated Use direct methods instead for better performance\n   */\n  setupParticle(particle, initialize, behaviour) {\n    // Direct setup\n    particle.reset();\n    \n    // Handle initializes/behaviors\n    const initializes = initialize ? Util.toArray(initialize) : this.initializes;\n    const behaviours = behaviour ? Util.toArray(behaviour) : this.behaviours;\n    \n    // Initialize\n    InitializeUtil.initialize(this, particle, initializes);\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n\n    // Add to array\n    this.particles.push(particle);\n  }\n\n  /**\n   * Removes all particles and stops the emitter.\n   */\n  remove() {\n    this.stop();\n    \n    // More efficient particle cleanup\n    const particles = this.particles;\n    const len = particles.length;\n    \n    // Return all particles to pool\n    if (this.parent && this.parent.pool) {\n      const pool = this.parent.pool;\n      for (let i = 0; i < len; i++) {\n        pool.expire(particles[i]);\n      }\n    }\n    \n    // Clear array in one operation\n    particles.length = 0;\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    this.dead = true;\n    this.remove();\n    this.removeAllInitializers();\n    this.removeAllBehaviours();\n    this.parent && this.parent.removeEmitter(this);\n\n    this.rate = null;\n    this.old = null;\n    this.rgb = null;\n    this.v = null;\n    this.a = null;\n    this.p = null;\n  }\n}\n\nEventDispatcher.bind(Emitter);\n","import Emitter from \"./Emitter\";\n\nexport default class BehaviourEmitter extends Emitter {\n  /**\n   * The BehaviourEmitter class inherits from Proton.Emitter\n   *\n   * use the BehaviourEmitter you can add behaviours to self;\n   * @class Proton.BehaviourEmitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   */\n  constructor(conf) {\n    super(conf);\n\n    this.selfBehaviours = [];\n  }\n\n  /**\n   * add the Behaviour to emitter;\n   *\n   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addSelfBehaviour\n   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')\n   */\n  addSelfBehaviour(...rest) {\n    let i,\n      length = rest.length;\n\n    for (i = 0; i < length; i++) {\n      let behaviour = rest[i];\n      this.selfBehaviours.push(behaviour);\n      behaviour.initialize(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour for self\n   * @method removeSelfBehaviour\n   * @param {Proton.Behaviour} behaviour a behaviour\n   */\n  removeSelfBehaviour(behaviour) {\n    const index = this.selfBehaviours.indexOf(behaviour);\n    if (index > -1) this.selfBehaviours.splice(index, 1);\n  }\n\n  update(time) {\n    super.update(time);\n\n    if (!this.sleep) {\n      const length = this.selfBehaviours.length;\n      let i;\n\n      for (i = 0; i < length; i++) {\n        this.selfBehaviours[i].applyBehaviour(this, time, i);\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Emitter from \"./Emitter\";\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from Proton.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class Proton.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} conf the parameters object;\n   */\n  constructor(mouseTarget, ease, conf) {\n    super(conf);\n\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    this.mousemoveHandler = e => this.mousemove.call(this, e);\n    this.mousedownHandler = e => this.mousedown.call(this, e);\n    this.mouseupHandler = e => this.mouseup.call(this, e);\n    this.mouseTarget.addEventListener(\"mousemove\", this.mousemoveHandler, false);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this._allowEmitting = false;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX === 0) {\n      this.p.x += (e.layerX - this.p.x) * this.ease;\n      this.p.y += (e.layerY - this.p.y) * this.ease;\n    } else if (e.offsetX || e.offsetX === 0) {\n      this.p.x += (e.offsetX - this.p.x) * this.ease;\n      this.p.y += (e.offsetY - this.p.y) * this.ease;\n    }\n\n    if (this._allowEmitting) super.emit(\"once\");\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\"mousemove\", this.mousemoveHandler, false);\n  }\n}\n","export default {\n  /**\n   * Determine whether it is a picture object\n   *\n   * @return {boolean} is or no\n   */\n  isImage(obj) {\n    if (!obj) return false;\n    if (obj.__isImage) return true;\n\n    const tagName = `${obj.tagName}`.toUpperCase();\n    const nodeName = `${obj.nodeName}`.toUpperCase();\n    if (nodeName === \"IMG\" || tagName === \"IMG\") {\n      obj.__isImage = true;\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * Determine whether it is a string object\n   *\n   * @return {boolean} is or no\n   */\n  isString(obj) {\n    return typeof obj === \"string\";\n  }\n};\n","import Pool from \"../core/Pool\";\n\nexport default class BaseRenderer {\n  constructor(element, stroke) {\n    this.pool = new Pool();\n    this.element = element;\n    this.stroke = stroke;\n    this.circleConf = { isCircle: true };\n\n    this.initEventHandler();\n    this.name = \"BaseRenderer\";\n  }\n\n  setStroke(color = \"#000000\", thinkness = 1) {\n    this.stroke = { color, thinkness };\n  }\n\n  initEventHandler() {\n    this._protonUpdateHandler = () => {\n      this.onProtonUpdate.call(this);\n    };\n\n    this._protonUpdateAfterHandler = () => {\n      this.onProtonUpdateAfter.call(this);\n    };\n\n    this._emitterAddedHandler = emitter => {\n      this.onEmitterAdded.call(this, emitter);\n    };\n\n    this._emitterRemovedHandler = emitter => {\n      this.onEmitterRemoved.call(this, emitter);\n    };\n\n    this._particleCreatedHandler = particle => {\n      this.onParticleCreated.call(this, particle);\n    };\n\n    this._particleUpdateHandler = particle => {\n      this.onParticleUpdate.call(this, particle);\n    };\n\n    this._particleDeadHandler = particle => {\n      this.onParticleDead.call(this, particle);\n    };\n  }\n\n  init(proton) {\n    this.parent = proton;\n\n    proton.addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler);\n\n    proton.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n    proton.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n    proton.addEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler);\n    proton.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n    proton.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n  }\n\n  resize(width, height) {}\n\n  destroy() {\n    this.remove();\n    this.pool.destroy();\n    this.pool = null;\n    this.element = null;\n    this.stroke = null;\n  }\n\n  remove(proton) {\n    this.parent.removeEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n    this.parent.removeEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler);\n\n    this.parent.removeEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n    this.parent.removeEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n    this.parent.removeEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler);\n    this.parent.removeEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n    this.parent.removeEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n\n    this.parent = null;\n  }\n\n  onProtonUpdate() {}\n  onProtonUpdateAfter() {}\n\n  onEmitterAdded(emitter) {}\n  onEmitterRemoved(emitter) {}\n\n  onParticleCreated(particle) {}\n  onParticleUpdate(particle) {}\n  onParticleDead(particle) {}\n}\n","import Types from \"../utils/Types\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\n/**\n * CanvasRenderer class for rendering particles on a canvas element.\n * @extends BaseRenderer\n */\nexport default class CanvasRenderer extends BaseRenderer {\n  /**\n   * @type {object|null}\n   * @private\n   */\n  stroke;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   * @private\n   */\n  context;\n\n  /**\n   * @type {object}\n   * @private\n   */\n  bufferCache;\n\n  /**\n   * @type {string}\n   */\n  name;\n\n  /**\n   * Creates a new CanvasRenderer instance.\n   * @param {HTMLCanvasElement} element - The canvas element to render on.\n   */\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.context = this.element.getContext(\"2d\");\n    this.bufferCache = {};\n    this.name = \"CanvasRenderer\";\n  }\n\n  /**\n   * Resizes the canvas element.\n   * @param {number} width - The new width of the canvas.\n   * @param {number} height - The new height of the canvas.\n   */\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  /**\n   * Clears the canvas on Proton update.\n   */\n  onProtonUpdate() {\n    this.context.clearRect(0, 0, this.element.width, this.element.height);\n  }\n\n  /**\n   * Handles particle creation.\n   * @param {object} particle - The created particle.\n   */\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.color = particle.color || \"#ff0000\";\n    }\n  }\n\n  /**\n   * Handles particle updates.\n   * @param {object} particle - The updated particle.\n   */\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      if (Types.isImage(particle.body)) {\n        this.drawImage(particle);\n      }\n    } else {\n      this.drawCircle(particle);\n    }\n  }\n\n  /**\n   * Handles particle destruction.\n   * @param {object} particle - The destroyed particle.\n   */\n  onParticleDead(particle) {\n    particle.body = null;\n  }\n\n  /**\n   * Adds an image to the particle body.\n   * @param {HTMLImageElement} img - The image to add.\n   * @param {object} particle - The particle to add the image to.\n   * @private\n   */\n  addImg2Body(img, particle) {\n    particle.body = img;\n  }\n\n  /**\n   * Draws an image particle.\n   * @param {object} particle - The particle to draw.\n   * @private\n   */\n  drawImage(particle) {\n    const w = (particle.body.width * particle.scale) | 0;\n    const h = (particle.body.height * particle.scale) | 0;\n    const x = particle.p.x - w / 2;\n    const y = particle.p.y - h / 2;\n\n    if (!!particle.color) {\n      if (!particle.data[\"buffer\"]) particle.data.buffer = this.createBuffer(particle.body);\n\n      const bufContext = particle.data.buffer.getContext(\"2d\");\n      bufContext.clearRect(0, 0, particle.data.buffer.width, particle.data.buffer.height);\n      bufContext.globalAlpha = particle.alpha;\n      bufContext.drawImage(particle.body, 0, 0);\n\n      bufContext.globalCompositeOperation = \"source-atop\";\n      bufContext.fillStyle = ColorUtil.rgbToHex(particle.rgb);\n      bufContext.fillRect(0, 0, particle.data.buffer.width, particle.data.buffer.height);\n      bufContext.globalCompositeOperation = \"source-over\";\n      bufContext.globalAlpha = 1;\n\n      this.context.drawImage(\n        particle.data.buffer,\n        0,\n        0,\n        particle.data.buffer.width,\n        particle.data.buffer.height,\n        x,\n        y,\n        w,\n        h\n      );\n    } else {\n      this.context.save();\n\n      this.context.globalAlpha = particle.alpha;\n      this.context.translate(particle.p.x, particle.p.y);\n      this.context.rotate(MathUtil.degreeTransform(particle.rotation));\n      this.context.translate(-particle.p.x, -particle.p.y);\n      this.context.drawImage(particle.body, 0, 0, particle.body.width, particle.body.height, x, y, w, h);\n\n      this.context.globalAlpha = 1;\n      this.context.restore();\n    }\n  }\n\n  /**\n   * Draws a circular particle.\n   * @param {object} particle - The particle to draw.\n   * @private\n   */\n  drawCircle(particle) {\n    if (particle.rgb) {\n      this.context.fillStyle = `rgba(${particle.rgb.r},${particle.rgb.g},${particle.rgb.b},${particle.alpha})`;\n    } else {\n      this.context.fillStyle = particle.color;\n    }\n\n    this.context.beginPath();\n    this.context.arc(particle.p.x, particle.p.y, particle.radius, 0, Math.PI * 2, true);\n\n    if (this.stroke) {\n      this.context.strokeStyle = this.stroke.color;\n      this.context.lineWidth = this.stroke.thinkness;\n      this.context.stroke();\n    }\n\n    this.context.closePath();\n    this.context.fill();\n  }\n\n  /**\n   * Creates a buffer for image particles.\n   * @param {HTMLImageElement} image - The image to create a buffer for.\n   * @returns {HTMLCanvasElement|undefined} The created buffer canvas.\n   * @private\n   */\n  createBuffer(image) {\n    if (Types.isImage(image)) {\n      const size = image.width + \"_\" + image.height;\n      let canvas = this.bufferCache[size];\n\n      if (!canvas) {\n        canvas = document.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        this.bufferCache[size] = canvas;\n      }\n\n      return canvas;\n    }\n  }\n\n  /**\n   * Destroys the renderer and cleans up resources.\n   */\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n    this.context = null;\n    this.bufferCache = null;\n  }\n}\n","import DomUtil from \"../utils/DomUtil\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\n/**\n * Represents a DOM-based renderer for particle systems.\n * @extends BaseRenderer\n */\nexport default class DomRenderer extends BaseRenderer {\n  /**\n   * Creates a new DomRenderer instance.\n   * @param {HTMLElement} element - The HTML element to render to.\n   */\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.transform3d = false;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.name = \"DomRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n      this.element.appendChild(particle.body);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (this.bodyReady(particle)) {\n      if (this.transform3d) {\n        DomUtil.transform3d(particle.body, particle.p.x, particle.p.y, particle.scale, particle.rotation);\n      } else {\n        DomUtil.transform(particle.body, particle.p.x, particle.p.y, particle.scale, particle.rotation);\n      }\n\n      particle.body.style.opacity = particle.alpha;\n\n      if (particle.body.isCircle) {\n        particle.body.style.backgroundColor = particle.color || \"#ff0000\";\n      }\n    }\n  }\n\n  onParticleDead(particle) {\n    if (this.bodyReady(particle)) {\n      this.element.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n  }\n\n  bodyReady(particle) {\n    return typeof particle.body === \"object\" && particle.body && !particle.body.isInner;\n  }\n\n  // private method\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = this.pool.get(img, particle);\n    DomUtil.resize(particle.body, img.width, img.height);\n\n    this.element.appendChild(particle.body);\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    return this.createSprite(body, particle);\n  }\n\n  // private methods\n  createCircle(particle) {\n    const dom = DomUtil.createDiv(`${particle.id}_dom`, 2 * particle.radius, 2 * particle.radius);\n    dom.style.borderRadius = `${particle.radius}px`;\n\n    if (this.stroke) {\n      dom.style.borderColor = this.stroke.color;\n      dom.style.borderWidth = `${this.stroke.thinkness}px`;\n    }\n    dom.isCircle = true;\n\n    return dom;\n  }\n\n  createSprite(body, particle) {\n    const url = typeof body === \"string\" ? body : body.src;\n    const dom = DomUtil.createDiv(`${particle.id}_dom`, body.width, body.height);\n    dom.style.backgroundImage = `url(${url})`;\n\n    return dom;\n  }\n\n  /**\n   * Destroys the renderer and cleans up resources.\n   */\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n  }\n}\n","import Types from \"../utils/Types\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class EaselRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.name = \"EaselRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      this.createSprite(particle);\n    } else {\n      this.createCircle(particle);\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      particle.body.x = particle.p.x;\n      particle.body.y = particle.p.y;\n\n      particle.body.alpha = particle.alpha;\n      particle.body.scaleX = particle.body.scaleY = particle.scale;\n      particle.body.rotation = particle.rotation;\n    }\n  }\n\n  onParticleDead(particle) {\n    if (particle.body) {\n      particle.body.parent && particle.body.parent.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n\n    if (particle.graphics) this.pool.expire(particle.graphics);\n  }\n\n  // private\n  createSprite(particle) {\n    particle.body = this.pool.get(particle.body);\n\n    if (particle.body.parent) return;\n    if (particle.body[\"image\"]) {\n      particle.body.regX = particle.body.image.width / 2;\n      particle.body.regY = particle.body.image.height / 2;\n    }\n  }\n\n  createCircle(particle) {\n    const graphics = this.pool.get(window.createjs.Graphics);\n\n    if (this.stroke) {\n      if (Types.isString(this.stroke)) {\n        graphics.beginStroke(this.stroke);\n      } else {\n        graphics.beginStroke(\"#000000\");\n      }\n    }\n    graphics.beginFill(particle.color || \"#ff0000\").drawCircle(0, 0, particle.radius);\n    const shape = this.pool.get(window.createjs.Shape, [graphics]);\n\n    particle.body = shape;\n    particle.graphics = graphics;\n  }\n\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n  }\n}\n","import Rectangle from \"../math/Rectangle\";\nimport BaseRenderer from \"./BaseRenderer\";\n\n/**\n * Represents a pixel-based renderer for particle systems.\n * @extends BaseRenderer\n */\nexport default class PixelRenderer extends BaseRenderer {\n  /**\n   * Creates a new PixelRenderer instance.\n   * @param {HTMLCanvasElement} element - The canvas element to render to.\n   * @param {Rectangle} [rectangle] - The rectangle defining the rendering area.\n   */\n  constructor(element, rectangle) {\n    super(element);\n\n    this.context = this.element.getContext(\"2d\");\n    this.imageData = null;\n    this.rectangle = rectangle;\n    this.createImageData(rectangle);\n\n    this.name = \"PixelRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  createImageData(rectangle) {\n    this.rectangle = rectangle ? rectangle : new Rectangle(0, 0, this.element.width, this.element.height);\n    this.imageData = this.context.createImageData(this.rectangle.width, this.rectangle.height);\n    this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n    this.imageData = this.context.getImageData(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n  }\n\n  onProtonUpdateAfter() {\n    this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n  }\n\n  onParticleCreated(particle) {}\n\n  onParticleUpdate(particle) {\n    if (this.imageData) {\n      this.setPixel(\n        this.imageData,\n        (particle.p.x - this.rectangle.x) >> 0,\n        (particle.p.y - this.rectangle.y) >> 0,\n        particle\n      );\n    }\n  }\n\n  setPixel(imagedata, x, y, particle) {\n    const rgb = particle.rgb;\n    if (x < 0 || x > this.element.width || y < 0 || y > this.element.height) return;\n\n    const i = ((y >> 0) * imagedata.width + (x >> 0)) * 4;\n    imagedata.data[i] = rgb.r;\n    imagedata.data[i + 1] = rgb.g;\n    imagedata.data[i + 2] = rgb.b;\n    imagedata.data[i + 3] = particle.alpha * 255;\n  }\n\n  onParticleDead(particle) {}\n\n  /**\n   * Destroys the renderer and cleans up resources.\n   */\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n    this.context = null;\n    this.imageData = null;\n    this.rectangle = null;\n  }\n}\n","import Types from \"../utils/Types\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\nimport Pool from \"../core/Pool\";\n\nlet PIXIClass;\n\n// Counter to generate unique IDs for each renderer instance\nlet rendererIdCounter = 0;\n\n/**\n * A specialized pool that ensures particles are never shared between different emitters\n */\nclass EmitterAwarePool extends Pool {\n  constructor() {\n    super();\n    // Store pools by emitter ID to ensure separation\n    this.emitterPools = new Map();\n  }\n\n  /**\n   * Get an item from the pool, ensuring it's specific to the emitter\n   */\n  get(target, params, emitterId) {\n    // Ensure we have a valid emitter ID\n    emitterId = emitterId || (params && params.parent && params.parent.id) || 'default';\n    \n    // Get or create the emitter-specific pool\n    if (!this.emitterPools.has(emitterId)) {\n      this.emitterPools.set(emitterId, []);\n    }\n    \n    const emitterPool = this.emitterPools.get(emitterId);\n    \n    // Get from the emitter-specific pool or create new\n    let p;\n    if (emitterPool.length > 0) {\n      p = emitterPool.pop();\n    } else {\n      p = this.createOrClone(target, params);\n      // Tag with emitter ID for tracking\n      p.__emitterId = emitterId;\n    }\n    \n    return p;\n  }\n\n  /**\n   * Return an item to its emitter-specific pool\n   */\n  expire(target, emitterId) {\n    if (!emitterId && target.__emitterId) {\n      emitterId = target.__emitterId;\n    }\n    \n    // Default to the general pool if no emitter ID is found\n    emitterId = emitterId || 'default';\n    \n    // Get or create the emitter-specific pool\n    if (!this.emitterPools.has(emitterId)) {\n      this.emitterPools.set(emitterId, []);\n    }\n    \n    // Return to the emitter-specific pool\n    return this.emitterPools.get(emitterId).push(target);\n  }\n\n  /**\n   * Clean up all pools\n   */\n  destroy() {\n    super.destroy();\n    \n    // Clear all emitter-specific pools\n    this.emitterPools.forEach(pool => {\n      pool.length = 0;\n    });\n    \n    this.emitterPools.clear();\n    this.emitterPools = null;\n  }\n}\n\n/**\n * Represents a PIXI-based renderer for particle systems.\n * @extends BaseRenderer\n */\nexport default class PixiRenderer extends BaseRenderer {\n  /**\n   * Creates a new PixiRenderer instance.\n   * @param {PIXI.Container} element - The PIXI container to render to.\n   * @param {string|number} [stroke] - The stroke color for particles.\n   */\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.color = false;\n    this.setColor = false;\n    this.blendMode = null;\n    \n    // Assign a unique ID to this renderer instance\n    this.rendererId = ++rendererIdCounter;\n    \n    // Create a new emitter-aware pool for this renderer\n    this.pixiPool = new EmitterAwarePool();\n    this.pixiPool.create = (body, particle) => this.createBody(body, particle);\n    \n    // Track emitters and their particles\n    this.emitterMap = new Map();\n    \n    this.setPIXI(window.PIXI);\n\n    this.name = \"PixiRenderer\";\n  }\n\n  setPIXI(PIXI) {\n    try {\n      PIXIClass = PIXI || { Sprite: {} };\n      this.createFromImage = PIXIClass.Sprite.from;\n    } catch (e) {}\n  }\n\n  onProtonUpdate() {}\n\n  onEmitterAdded(emitter) {\n    // Add emitter to tracking map\n    if (!this.emitterMap.has(emitter.id)) {\n      this.emitterMap.set(emitter.id, new Set());\n    }\n  }\n\n  onEmitterRemoved(emitter) {\n    // Clean up emitter's tracked particles\n    if (this.emitterMap.has(emitter.id)) {\n      this.emitterMap.delete(emitter.id);\n    }\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleCreated(particle) {\n    // Get the emitter ID for this particle and store it directly on the particle\n    const emitterId = particle.parent ? particle.parent.id : 'orphaned';\n    \n    // Store emitter ID directly on the particle for when parent reference is lost\n    particle.__emitterId = emitterId;\n    \n    if (particle.body) {\n      particle.body = this.pixiPool.get(particle.body, particle, emitterId);\n    } else {\n      particle.body = this.pixiPool.get(this.circleConf, particle, emitterId);\n    }\n\n    if (this.blendMode) {\n      particle.body.blendMode = this.blendMode;\n    }\n\n    // Track this particle with its emitter\n    if (this.emitterMap.has(emitterId)) {\n      this.emitterMap.get(emitterId).add(particle);\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleUpdate(particle) {\n    this.transform(particle, particle.body);\n\n    if (this.setColor === true || this.color === true) {\n      particle.body.tint = ColorUtil.getHex16FromParticle(particle);\n    }\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleDead(particle) {\n    if (!particle.body) return;\n    \n    this.element.removeChild(particle.body);\n    \n    // Use the cached emitter ID instead of accessing parent which might be null\n    const emitterId = particle.__emitterId || (particle.parent ? particle.parent.id : 'orphaned');\n    \n    // Return to the emitter-specific pool\n    this.pixiPool.expire(particle.body, emitterId);\n    \n    // Remove from tracked particles\n    if (this.emitterMap.has(emitterId)) {\n      this.emitterMap.get(emitterId).delete(particle);\n    }\n    \n    particle.body = null;\n  }\n\n  transform(particle, target) {\n    target.x = particle.p.x;\n    target.y = particle.p.y;\n\n    target.alpha = particle.alpha;\n\n    target.scale.x = particle.scale;\n    target.scale.y = particle.scale;\n\n    target.rotation = particle.rotation * MathUtil.PI_180;\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body);\n  }\n\n  createSprite(body) {\n    const sprite = body.isInner ? this.createFromImage(body.src) : new PIXIClass.Sprite(body);\n\n    sprite.anchor.set(0.5, 0.5);\n\n    return sprite;\n  }\n\n  createCircle(particle) {\n    const graphics = new PIXIClass.Graphics();\n    \n    if (this.stroke) {\n      const stroke = Types.isString(this.stroke) ? this.stroke : 0x000000;\n      graphics.lineStyle(1, stroke);\n    }\n\n    graphics.beginFill(particle.color || 0x008ced);\n    graphics.drawCircle(0, 0, particle.radius);\n    graphics.endFill();\n\n    return graphics;\n  }\n\n  /**\n   * Destroys the renderer and cleans up resources.\n   * @param {Array<Particle>} particles - The particles to clean up.\n   */\n  destroy(particles) {\n    super.destroy();\n\n    // Clean up tracking maps\n    this.emitterMap.clear();\n    this.emitterMap = null;\n\n    // Clean up the instance-specific particle pool\n    this.pixiPool.destroy();\n    this.pixiPool = null;\n\n    let i = particles.length;\n    while (i--) {\n      let particle = particles[i];\n      if (particle.body) {\n        this.element.removeChild(particle.body);\n        particle.body.destroy({ children: true });\n      }\n    }\n  }\n}","import Mat3 from \"../math/Mat3\";\n\nexport default class MStack {\n  constructor() {\n    this.mats = [];\n    this.size = 0;\n\n    for (let i = 0; i < 20; i++) this.mats.push(Mat3.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n  }\n\n  set(m, i) {\n    if (i === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[i - 1], m, this.mats[i]);\n\n    this.size = Math.max(this.size, i + 1);\n  }\n\n  push(m) {\n    if (this.size === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[this.size - 1], m, this.mats[this.size]);\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size > 0) this.size--;\n  }\n\n  top() {\n    return this.mats[this.size - 1];\n  }\n}\n","import Mat3 from \"../math/Mat3\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nimport Util from \"../utils/Util\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport MStack from \"../utils/MStack\";\nimport DomUtil from \"../utils/DomUtil\";\nimport WebGLUtil from \"../utils/WebGLUtil\";\nimport MathUtil from \"../math/MathUtil\";\n\n/**\n * Represents a WebGL-based renderer for particle systems.\n * @extends BaseRenderer\n */\nexport default class WebGLRenderer extends BaseRenderer {\n  /**\n   * Creates a new WebGLRenderer instance.\n   * @param {HTMLCanvasElement} element - The canvas element to render to.\n   */\n  constructor(element) {\n    super(element);\n\n    this.gl = this.element.getContext(\"experimental-webgl\", { antialias: true, stencil: false, depth: false });\n    if (!this.gl) alert(\"Sorry your browser do not suppest WebGL!\");\n\n    this.initVar();\n    this.setMaxRadius();\n    this.initShaders();\n    this.initBuffers();\n\n    this.gl.blendEquation(this.gl.FUNC_ADD);\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n    this.gl.enable(this.gl.BLEND);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.name = \"WebGLRenderer\";\n  }\n\n  init(proton) {\n    super.init(proton);\n    this.resize(this.element.width, this.element.height);\n  }\n\n  resize(width, height) {\n    this.umat[4] = -2;\n    this.umat[7] = 1;\n\n    this.smat[0] = 1 / width;\n    this.smat[4] = 1 / height;\n\n    this.mstack.set(this.umat, 0);\n    this.mstack.set(this.smat, 1);\n\n    this.gl.viewport(0, 0, width, height);\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  setMaxRadius(radius) {\n    this.circleCanvasURL = this.createCircle(radius);\n  }\n\n  getVertexShader() {\n    const vsSource = [\n      \"uniform vec2 viewport;\",\n      \"attribute vec2 aVertexPosition;\",\n      \"attribute vec2 aTextureCoord;\",\n      \"uniform mat3 tMat;\",\n      \"varying vec2 vTextureCoord;\",\n      \"varying float alpha;\",\n      \"void main() {\",\n      \"vec3 v = tMat * vec3(aVertexPosition, 1.0);\",\n      \"gl_Position = vec4(v.x, v.y, 0, 1);\",\n      \"vTextureCoord = aTextureCoord;\",\n      \"alpha = tMat[0][2];\",\n      \"}\"\n    ].join(\"\\n\");\n    return vsSource;\n  }\n\n  getFragmentShader() {\n    const fsSource = [\n      \"precision mediump float;\",\n      \"varying vec2 vTextureCoord;\",\n      \"varying float alpha;\",\n      \"uniform sampler2D uSampler;\",\n      \"uniform vec4 color;\",\n      \"uniform bool useTexture;\",\n      \"uniform vec3 uColor;\",\n      \"void main() {\",\n      \"vec4 textureColor = texture2D(uSampler, vTextureCoord);\",\n      \"gl_FragColor = textureColor * vec4(uColor, 1.0);\",\n      \"gl_FragColor.w *= alpha;\",\n      \"}\"\n    ].join(\"\\n\");\n    return fsSource;\n  }\n\n  initVar() {\n    this.mstack = new MStack();\n    this.umat = Mat3.create([2, 0, 1, 0, -2, 0, -1, 1, 1]);\n    this.smat = Mat3.create([1 / 100, 0, 1, 0, 1 / 100, 0, 0, 0, 1]);\n    this.texturebuffers = {};\n  }\n\n  blendEquation(A) {\n    this.gl.blendEquation(this.gl[A]);\n  }\n\n  blendFunc(A, B) {\n    this.gl.blendFunc(this.gl[A], this.gl[B]);\n  }\n\n  getShader(gl, str, fs) {\n    const shader = fs ? gl.createShader(gl.FRAGMENT_SHADER) : gl.createShader(gl.VERTEX_SHADER);\n\n    gl.shaderSource(shader, str);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(shader));\n      return null;\n    }\n\n    return shader;\n  }\n\n  initShaders() {\n    const fragmentShader = this.getShader(this.gl, this.getFragmentShader(), true);\n    const vertexShader = this.getShader(this.gl, this.getVertexShader(), false);\n\n    this.sprogram = this.gl.createProgram();\n    this.gl.attachShader(this.sprogram, vertexShader);\n    this.gl.attachShader(this.sprogram, fragmentShader);\n    this.gl.linkProgram(this.sprogram);\n\n    if (!this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS)) alert(\"Could not initialise shaders\");\n\n    this.gl.useProgram(this.sprogram);\n    this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, \"aVertexPosition\");\n    this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, \"aTextureCoord\");\n    this.gl.enableVertexAttribArray(this.sprogram.tca);\n    this.gl.enableVertexAttribArray(this.sprogram.vpa);\n\n    this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, \"tMat\");\n    this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, \"uSampler\");\n    this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, \"useTexture\");\n    this.sprogram.color = this.gl.getUniformLocation(this.sprogram, \"uColor\");\n    this.gl.uniform1i(this.sprogram.useTex, 1);\n  }\n\n  initBuffers() {\n    const vs = [0, 3, 1, 0, 2, 3];\n    let idx;\n\n    this.unitIBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vs), this.gl.STATIC_DRAW);\n\n    let i;\n    let ids = [];\n    for (i = 0; i < 100; i++) ids.push(i);\n    idx = new Uint16Array(ids);\n\n    this.unitI33 = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n\n    ids = [];\n    for (i = 0; i < 100; i++) ids.push(i, i + 1, i + 2);\n    idx = new Uint16Array(ids);\n\n    this.stripBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n  }\n\n  createCircle(raidus) {\n    this.circleCanvasRadius = WebGLUtil.nhpot(Util.initValue(raidus, 32));\n    const canvas = DomUtil.createCanvas(\"circle_canvas\", this.circleCanvasRadius * 2, this.circleCanvasRadius * 2);\n    const context = canvas.getContext(\"2d\");\n\n    context.beginPath();\n    context.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fillStyle = \"#FFF\";\n    context.fill();\n\n    return canvas.toDataURL();\n  }\n\n  drawImg2Canvas(particle) {\n    const _w = particle.body.width;\n    const _h = particle.body.height;\n\n    const _width = WebGLUtil.nhpot(particle.body.width);\n    const _height = WebGLUtil.nhpot(particle.body.height);\n\n    const _scaleX = particle.body.width / _width;\n    const _scaleY = particle.body.height / _height;\n\n    if (!this.texturebuffers[particle.data.src])\n      this.texturebuffers[particle.data.src] = [\n        this.gl.createTexture(),\n        this.gl.createBuffer(),\n        this.gl.createBuffer()\n      ];\n\n    particle.data.texture = this.texturebuffers[particle.data.src][0];\n    particle.data.vcBuffer = this.texturebuffers[particle.data.src][1];\n    particle.data.tcBuffer = this.texturebuffers[particle.data.src][2];\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([0.0, 0.0, _scaleX, 0.0, 0.0, _scaleY, _scaleY, _scaleY]),\n      this.gl.STATIC_DRAW\n    );\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([0.0, 0.0, _w, 0.0, 0.0, _h, _w, _h]),\n      this.gl.STATIC_DRAW\n    );\n\n    const context = particle.data.canvas.getContext(\"2d\");\n    const data = context.getImageData(0, 0, _width, _height);\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST);\n    this.gl.generateMipmap(this.gl.TEXTURE_2D);\n\n    particle.data.textureLoaded = true;\n    particle.data.textureWidth = _w;\n    particle.data.textureHeight = _h;\n  }\n\n  onProtonUpdate() {\n    // this.gl.clearColor(0, 0, 0, 1);\n    // this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n  }\n\n  onParticleCreated(particle) {\n    particle.data.textureLoaded = false;\n    particle.data.tmat = Mat3.create();\n    particle.data.tmat[8] = 1;\n    particle.data.imat = Mat3.create();\n    particle.data.imat[8] = 1;\n\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      ImgUtil.getImgFromCache(this.circleCanvasURL, this.addImg2Body, particle);\n      particle.data.oldScale = particle.radius / this.circleCanvasRadius;\n    }\n  }\n\n  // private\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = img;\n    particle.data.src = img.src;\n    particle.data.canvas = ImgUtil.getCanvasFromCache(img);\n    particle.data.oldScale = 1;\n\n    this.drawImg2Canvas(particle);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.data.textureLoaded) {\n      this.updateMatrix(particle);\n\n      this.gl.uniform3f(this.sprogram.color, particle.rgb.r / 255, particle.rgb.g / 255, particle.rgb.b / 255);\n      this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, false, this.mstack.top());\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n      this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, false, 0, 0);\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n      this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, false, 0, 0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n      this.gl.uniform1i(this.sprogram.samplerUniform, 0);\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n\n      this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n      this.mstack.pop();\n    }\n  }\n\n  onParticleDead(particle) {}\n\n  updateMatrix(particle) {\n    const moveOriginMatrix = WebGLUtil.makeTranslation(\n      -particle.data.textureWidth / 2,\n      -particle.data.textureHeight / 2\n    );\n    const translationMatrix = WebGLUtil.makeTranslation(particle.p.x, particle.p.y);\n\n    const angel = particle.rotation * MathUtil.PI_180;\n    const rotationMatrix = WebGLUtil.makeRotation(angel);\n\n    const scale = particle.scale * particle.data.oldScale;\n    const scaleMatrix = WebGLUtil.makeScale(scale, scale);\n    let matrix = WebGLUtil.matrixMultiply(moveOriginMatrix, scaleMatrix);\n\n    matrix = WebGLUtil.matrixMultiply(matrix, rotationMatrix);\n    matrix = WebGLUtil.matrixMultiply(matrix, translationMatrix);\n\n    Mat3.inverse(matrix, particle.data.imat);\n    matrix[2] = particle.alpha;\n\n    this.mstack.push(matrix);\n  }\n\n  destroy() {\n    super.destroy();\n    this.gl = null;\n    this.mstack = null;\n    this.umat = null;\n    this.smat = null;\n    this.texturebuffers = null;\n  }\n}\n","import BaseRenderer from \"./BaseRenderer\";\n\n/**\n * Represents a custom renderer that extends the BaseRenderer.\n * @extends BaseRenderer\n */\nexport default class CustomRenderer extends BaseRenderer {\n  /**\n   * Creates a new CustomRenderer instance.\n   * @param {HTMLElement} element - The HTML element to render to.\n   */\n  constructor(element) {\n    super(element);\n\n    /**\n     * The name of the renderer.\n     * @type {string}\n     */\n    this.name = \"CustomRenderer\";\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\nimport Vector2D from \"../math/Vector2D\";\n\n/**\n * Represents a line zone for particle systems.\n * @extends Zone\n */\nexport default class LineZone extends Zone {\n  /**\n   * Creates a new LineZone.\n   * @param {number} x1 - The x-coordinate of the first point.\n   * @param {number} y1 - The y-coordinate of the first point.\n   * @param {number} [x2] - The x-coordinate of the second point.\n   * @param {number} [y2] - The y-coordinate of the second point.\n   * @param {string} [direction=\">\"] - The direction of the line.\n   */\n  constructor(x1, y1, x2, y2, direction = \">\") {\n    super();\n\n    if (x2 - x1 >= 0) {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.x2 = x2;\n      this.y2 = y2;\n    } else {\n      this.x1 = x2;\n      this.y1 = y2;\n      this.x2 = x1;\n      this.y2 = y1;\n    }\n\n    this.dx = this.x2 - this.x1;\n    this.dy = this.y2 - this.y1;\n\n    this.minx = Math.min(this.x1, this.x2);\n    this.miny = Math.min(this.y1, this.y2);\n    this.maxx = Math.max(this.x1, this.x2);\n    this.maxy = Math.max(this.y1, this.y2);\n\n    this.dot = this.x2 * this.y1 - this.x1 * this.y2;\n    this.xxyy = this.dx * this.dx + this.dy * this.dy;\n\n    this.gradient = this.getGradient();\n    this.length = this.getLength();\n    this.direction = Util.initValue(direction, \">\");\n  }\n\n  /**\n   * Gets a random position on the line.\n   * @returns {Vector2D} A vector representing the random position.\n   */\n  getPosition() {\n    this.random = Math.random();\n    this.vector.x = this.x1 + this.random * this.length * Math.cos(this.gradient);\n    this.vector.y = this.y1 + this.random * this.length * Math.sin(this.gradient);\n\n    return this.vector;\n  }\n\n  /**\n   * Determines which side of the line a point is on.\n   * @param {number} x - The x-coordinate of the point.\n   * @param {number} y - The y-coordinate of the point.\n   * @returns {boolean} True if the point is on the positive side of the line, false otherwise.\n   */\n  getDirection(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = B === 0 ? 1 : B;\n\n    if ((A * x + B * y + C) * D > 0) return true;\n    else return false;\n  }\n\n  /**\n   * Calculates the distance of a point from the line.\n   * @param {number} x - The x-coordinate of the point.\n   * @param {number} y - The y-coordinate of the point.\n   * @returns {number} The distance from the point to the line.\n   */\n  getDistance(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = A * x + B * y + C;\n\n    return D / Math.sqrt(this.xxyy);\n  }\n\n  /**\n   * Calculates the symmetric vector of a given vector with respect to the line.\n   * @param {Vector2D} v - The vector to reflect.\n   * @returns {Vector2D} The reflected vector.\n   */\n  getSymmetric(v) {\n    const tha2 = v.getGradient();\n    const tha1 = this.getGradient();\n    const tha = 2 * (tha1 - tha2);\n\n    const oldx = v.x;\n    const oldy = v.y;\n\n    v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n\n    return v;\n  }\n\n  /**\n   * Gets the gradient (angle) of the line.\n   * @returns {number} The gradient of the line in radians.\n   */\n  getGradient() {\n    return Math.atan2(this.dy, this.dx);\n  }\n\n  /**\n   * Checks if a particle is outside the range of the line.\n   * @param {Particle} particle - The particle to check.\n   * @returns {boolean} True if the particle is within range, false otherwise.\n   */\n  rangeOut(particle) {\n    const angle = Math.abs(this.getGradient());\n\n    if (angle <= MathUtil.PI / 4) {\n      if (particle.p.x <= this.maxx && particle.p.x >= this.minx) return true;\n    } else {\n      if (particle.p.y <= this.maxy && particle.p.y >= this.miny) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Gets the length of the line.\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n  }\n\n  /**\n   * Handles particle crossing behavior based on the crossType.\n   * @param {Particle} particle - The particle to check for crossing.\n   */\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.direction === \">\" || this.direction === \"R\" || this.direction === \"right\" || this.direction === \"down\") {\n        if (!this.rangeOut(particle)) return;\n        if (this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      } else {\n        if (!this.rangeOut(particle)) return;\n        if (!this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      }\n    } else if (this.crossType === \"bound\") {\n      if (!this.rangeOut(particle)) return;\n\n      if (this.getDistance(particle.p.x, particle.p.y) <= particle.radius) {\n        if (this.dx === 0) {\n          particle.v.x *= -1;\n        } else if (this.dy === 0) {\n          particle.v.y *= -1;\n        } else {\n          this.getSymmetric(particle.v);\n        }\n      }\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, LineZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport MathUtil from \"../math/MathUtil\";\n\n/**\n * Represents a circular zone in a 2D space.\n * @extends Zone\n */\nexport default class CircleZone extends Zone {\n  /**\n   * Creates a new CircleZone.\n   * @param {number} x - The x-coordinate of the circle's center.\n   * @param {number} y - The y-coordinate of the circle's center.\n   * @param {number} [radius] - The radius of the circle.\n   */\n  constructor(x, y, radius) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.angle = 0;\n    this.center = { x, y };\n  }\n\n  /**\n   * Gets a random position within the circle.\n   * @returns {Object} An object with x and y coordinates.\n   */\n  getPosition() {\n    this.angle = MathUtil.PIx2 * Math.random();\n    this.randomRadius = Math.random() * this.radius;\n    this.vector.x = this.x + this.randomRadius * Math.cos(this.angle);\n    this.vector.y = this.y + this.randomRadius * Math.sin(this.angle);\n\n    return this.vector;\n  }\n\n  /**\n   * Sets the center of the circle.\n   * @param {number} x - The new x-coordinate of the center.\n   * @param {number} y - The new y-coordinate of the center.\n   */\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  /**\n   * Handles particle crossing behavior.\n   * @param {Object} particle - The particle to check for crossing.\n   */\n  crossing(particle) {\n    const d = particle.p.distanceTo(this.center);\n\n    if (this.crossType === \"dead\") {\n      if (d - particle.radius > this.radius) particle.dead = true;\n    } else if (this.crossType === \"bound\") {\n      if (d + particle.radius >= this.radius) this.getSymmetric(particle);\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, CircleZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n\n  /**\n   * Calculates the symmetric position of a particle.\n   * @param {Object} particle - The particle to calculate symmetry for.\n   */\n  getSymmetric(particle) {\n    const tha2 = particle.v.getGradient();\n    const tha1 = this.getGradient(particle);\n\n    const tha = 2 * (tha1 - tha2);\n    const oldx = particle.v.x;\n    const oldy = particle.v.y;\n\n    particle.v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    particle.v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n  }\n\n  /**\n   * Calculates the gradient for a particle.\n   * @param {Object} particle - The particle to calculate the gradient for.\n   * @returns {number} The calculated gradient.\n   */\n  getGradient(particle) {\n    return -MathUtil.PI_2 + Math.atan2(particle.p.y - this.center.y, particle.p.x - this.center.x);\n  }\n}\n","import Zone from \"./Zone\";\n\n/**\n * Represents a rectangular zone for particle systems.\n * @extends Zone\n */\nexport default class RectZone extends Zone {\n  /**\n   * Creates a new RectZone.\n   * @param {number} x - The x-coordinate of the top-left corner of the rectangle.\n   * @param {number} y - The y-coordinate of the top-left corner of the rectangle.\n   * @param {number} [width] - The width of the rectangle.\n   * @param {number} [height] - The height of the rectangle.\n   */\n  constructor(x, y, width = 200, height = 200) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Gets a random position within the rectangular zone.\n   * @returns {Vector2D} A vector representing the random position.\n   */\n  getPosition() {\n    this.vector.x = this.x + Math.random() * this.width;\n    this.vector.y = this.y + Math.random() * this.height;\n    return this.vector;\n  }\n\n  /**\n   * Handles particle crossing behavior based on the crossType.\n   * @param {Particle} particle - The particle to check for crossing.\n   */\n  crossing(particle) {\n    // particle dead zone\n    if (this.crossType === \"dead\") {\n      if (particle.p.x + particle.radius < this.x) particle.dead = true;\n      else if (particle.p.x - particle.radius > this.x + this.width) particle.dead = true;\n\n      if (particle.p.y + particle.radius < this.y) particle.dead = true;\n      else if (particle.p.y - particle.radius > this.y + this.height) particle.dead = true;\n    }\n\n    // particle bound zone\n    else if (this.crossType === \"bound\") {\n      if (particle.p.x - particle.radius < this.x) {\n        particle.p.x = this.x + particle.radius;\n        particle.v.x *= -1;\n      } else if (particle.p.x + particle.radius > this.x + this.width) {\n        particle.p.x = this.x + this.width - particle.radius;\n        particle.v.x *= -1;\n      }\n\n      if (particle.p.y - particle.radius < this.y) {\n        particle.p.y = this.y + particle.radius;\n        particle.v.y *= -1;\n      } else if (particle.p.y + particle.radius > this.y + this.height) {\n        particle.p.y = this.y + this.height - particle.radius;\n        particle.v.y *= -1;\n      }\n    }\n\n    // particle cross zone\n    else if (this.crossType === \"cross\") {\n      if (particle.p.x + particle.radius < this.x && particle.v.x <= 0) {\n        particle.p.x = this.x + this.width + particle.radius;\n      } else if (particle.p.x - particle.radius > this.x + this.width && particle.v.x >= 0) {\n        particle.p.x = this.x - particle.radius;\n      }\n\n      if (particle.p.y + particle.radius < this.y && particle.v.y <= 0) {\n        particle.p.y = this.y + this.height + particle.radius;\n      } else if (particle.p.y - particle.radius > this.y + this.height && particle.v.y >= 0) {\n        particle.p.y = this.y - particle.radius;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\n\n/**\n * Represents a zone based on image data.\n * @extends Zone\n */\nexport default class ImageZone extends Zone {\n  /**\n   * Creates an ImageZone.\n   * @param {ImageData} imageData - The image data to use for the zone.\n   * @param {number} [x=0] - The x-coordinate offset.\n   * @param {number} [y=0] - The y-coordinate offset.\n   * @param {number} [d=2] - The sampling density.\n   */\n  constructor(imageData, x, y, d) {\n    super();\n    this.reset(imageData, x, y, d);\n  }\n\n  /**\n   * Resets the ImageZone with new parameters.\n   * @param {ImageData} imageData - The image data to use for the zone.\n   * @param {number} [x=0] - The x-coordinate offset.\n   * @param {number} [y=0] - The y-coordinate offset.\n   * @param {number} [d=2] - The sampling density.\n   */\n  reset(imageData, x, y, d) {\n    this.imageData = imageData;\n    this.x = Util.initValue(x, 0);\n    this.y = Util.initValue(y, 0);\n    this.d = Util.initValue(d, 2);\n\n    this.vectors = [];\n    this.setVectors();\n  }\n\n  /**\n   * Sets up vectors based on the image data.\n   * @returns {Object} The vector object.\n   */\n  setVectors() {\n    let i, j;\n    const length1 = this.imageData.width;\n    const length2 = this.imageData.height;\n\n    for (i = 0; i < length1; i += this.d) {\n      for (j = 0; j < length2; j += this.d) {\n        let index = ((j >> 0) * length1 + (i >> 0)) * 4;\n\n        if (this.imageData.data[index + 3] > 0) {\n          this.vectors.push({ x: i + this.x, y: j + this.y });\n        }\n      }\n    }\n\n    return this.vector;\n  }\n\n  /**\n   * Checks if a point is within the bounds of the image.\n   * @param {number} x - The x-coordinate to check.\n   * @param {number} y - The y-coordinate to check.\n   * @returns {boolean} True if the point is within bounds, false otherwise.\n   */\n  getBound(x, y) {\n    const index = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n    return this.imageData.data[index + 3] > 0;\n  }\n\n  /**\n   * Gets a random position within the image zone.\n   * @returns {Object} A vector representing the position.\n   */\n  getPosition() {\n    const vector = Util.getRandFromArray(this.vectors);\n    return this.vector.copy(vector);\n  }\n\n  /**\n   * Gets the color at a specific point in the image.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} An object containing r, g, b, and a values.\n   */\n  getColor(x, y) {\n    x -= this.x;\n    y -= this.y;\n    const i = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n\n    return {\n      r: this.imageData.data[i],\n      g: this.imageData.data[i + 1],\n      b: this.imageData.data[i + 2],\n      a: this.imageData.data[i + 3]\n    };\n  }\n\n  /**\n   * Handles particle crossing behavior.\n   * @param {Object} particle - The particle to check for crossing.\n   */\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      particle.dead = this.getBound(particle.p.x - this.x, particle.p.y - this.y);\n    } else if (this.crossType === \"bound\") {\n      if (!this.getBound(particle.p.x - this.x, particle.p.y - this.y)) particle.v.negate();\n    }\n  }\n\n  /**\n   * Destroys the ImageZone and cleans up resources.\n   */\n  destroy() {\n    super.destroy();\n    this.imageData = null;\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport CircleZone from \"../zone/CircleZone\";\nimport PointZone from \"../zone/PointZone\";\nimport LineZone from \"../zone/LineZone\";\nimport RectZone from \"../zone/RectZone\";\n\nexport default {\n  addEventListener(proton, func) {\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", () => func());\n  },\n\n  getStyle(color = \"#ff0000\") {\n    const rgb = ColorUtil.hexToRgb(color);\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.5)`;\n  },\n\n  drawZone(proton, canvas, zone, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (zone instanceof PointZone) {\n        context.beginPath();\n        context.fillStyle = style;\n        context.arc(zone.x, zone.y, 10, 0, Math.PI * 2, true);\n        context.fill();\n        context.closePath();\n      } else if (zone instanceof LineZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.moveTo(zone.x1, zone.y1);\n        context.lineTo(zone.x2, zone.y2);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof RectZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.drawRect(zone.x, zone.y, zone.width, zone.height);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof CircleZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.arc(zone.x, zone.y, zone.radius, 0, Math.PI * 2, true);\n        context.stroke();\n        context.closePath();\n      }\n    });\n  },\n\n  drawEmitter(proton, canvas, emitter, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      context.beginPath();\n      context.fillStyle = style;\n      context.arc(emitter.p.x, emitter.p.y, 10, 0, Math.PI * 2, true);\n      context.fill();\n      context.closePath();\n    });\n  }\n};\n"],"names":["ipot","length","nhpot","i","makeTranslation","tx","ty","makeRotation","angleInRadians","c","Math","cos","s","sin","makeScale","sx","sy","matrixMultiply","a","b","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","createCanvas","id","width","height","position","dom","document","createElement","style","opacity","transform","createDiv","resize","marginLeft","marginTop","div","x","y","scale","rotate","willChange","css3","transform3d","key","val","bkey","charAt","toUpperCase","substr","imgsCache","canvasCache","canvasId","getImageData","context","image","rect","drawImage","imagedata","clearRect","getImgFromCache","img","callback","param","src","Image","onload","e","target","getCanvasFromCache","WebGLUtil","canvas","DomUtil","getContext","initValue","value","defaults","undefined","isArray","Object","prototype","toString","call","emptyArray","arr","toArray","sliceArray","arr1","index","arr2","push","getRandFromArray","floor","random","emptyObject","obj","ignore","indexOf","classApply","constructor","args","FactoryFunc","bind","apply","concat","ImgUtil","destroyAll","destroy","assign","source","hasOwnProperty","idsMap","Puid","_index","_cache","type","getId","uid","getIdFromCache","isBody","isInner","getTarget","Pool","num","total","cache","_proto","get","params","p","__puid","pop","createOrClone","expire","getCache","create","Util","clone","getCount","count","Stats","proton","container","emitterIndex","rendererIndex","update","body","add","emitter","getEmitter","renderer","getRenderer","str","emitters","emitSpeed","getEmitterPos","initializes","concatArr","behaviours","name","getCreatedNumber","pool","innerHTML","_this","cssText","join","addEventListener","bg","color","parentNode","appendChild","renderers","result","cpool","round","removeChild","EventDispatcher","_listeners","dispatchEvent","hasEventListener","removeEventListener","removeAllEventListeners","listener","splice","listeners","handler","PI","INFINITY","Infinity","MathUtil","PIx2","PI_2","PI_180","N180_PI","isInfinity","randomAToB","isInt","randomFloating","center","f","randomColor","slice","randomZone","display","k","digits","pow","degreeTransform","toColor16","Integration","calculate","particles","time","damping","eulerIntegrate","particle","sleep","old","copy","v","multiplyScalar","mass","clear","Proton","integrationType","now","then","elapsed","stats","EULER","integrator","_fps","_interval","DEFAULT_INTERVAL","addRenderer","render","init","removeRenderer","remove","addEmitter","parent","EMITTER_ADDED","removeEmitter","EMITTER_REMOVED","PROTON_UPDATE","USE_CLOCK","Date","getTime","amendChangeTabsBug","emittersUpdate","PROTON_UPDATE_AFTER","getAllParticles","destroyAllEmitters","destroyOther","setTimeout","_createClass","set","fps","MEASURE","RK2","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_SLEEP","PARTICLE_DEAD","Rgb","r","g","reset","Span","getValue","setSpanValue","getSpanValue","pan","hasProp","setProp","props","prop","setVectorVal","conf","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","getEasing","ease","Vector2D","setX","setY","getGradient","atan2","w","addVectors","addXY","sub","subVectors","divideScalar","negate","dot","lengthSq","normalize","distanceTo","distanceToSquared","tha","dx","dy","lerp","alpha","equals","Particle","data","rgb","PropUtil","getDirection","life","age","dead","sprite","energy","radius","rotation","easing","removeAllBehaviours","applyBehaviours","max","applyBehaviour","addBehaviour","behaviour","parents","initialize","addBehaviours","removeBehaviour","hexToRgb","h","hex16","substring","parseInt","rgbToHex","rbg","getHex16FromParticle","Number","Polar2D","abs","setR","setTha","toVector","getX","getY","Mat3","mat3","mat","Float32Array","mat1","mat2","multiply","inverse","d","multiplyVec2","m","vec","ArraySpan","_Span","_arr","_inheritsLoose","createArraySpan","Rectangle","bottom","right","contains","Rate","numpan","timepan","numPan","timePan","startTime","nextTime","Initialize","Life","_Initialize","lifePan","Zone","vector","crossType","alert","getPosition","crossing","PointZone","_Zone","console","error","Position","zone","Velocity","rpan","thapan","rPan","thaPan","normalizeVelocity","vr","polar2d","Mass","massPan","Radius","oldRadius","Body","imageTarget","inner","Behaviour","normalizeForce","force","normalizeValue","Force","_Behaviour","fx","fy","Attraction","targetPosition","radiusSq","attractionForce","RandomDrift","driftX","driftY","delay","panFoce","Gravity","_Force","Collision","newPool","collisionPool","delta","otherParticle","overlap","totalMass","averageMass1","averageMass2","distance","CrossZone","Alpha","same","alphaA","alphaB","Scale","scaleA","scaleB","Rotate","influence","rotationA","rotationB","Color","colorA","ColorUtil","colorB","CHANGING","Cyclone","angle","setAngleAndForce","span","String","toLowerCase","cangle","cyclone","gradient","Repulsion","_Attraction","GravityWell","centerPoint","distanceVec","distanceSq","factor","bindEmitter","Emitter","_Particle","emitTime","totalTime","rate","emit","stoped","isNaN","stop","preEmit","oldStoped","oldEmitTime","oldTotalTime","step","removeAllParticles","len","addSelfInitialize","addInitialize","_len","arguments","rest","Array","_key","removeInitialize","initializer","removeAllInitializers","_len2","_key2","emitting","integrate","shouldDispatchUpdates","Boolean","bindEvent","aliveCount","dispatch","event","MAX_EMIT_PER_FRAME","numToEmit","process","env","NODE_ENV","warn","_fastCreateParticles","particlesArr","MAX_SAFE_PARTICLES","getBulk","_initializeParticlesBulk","_createParticlesLoop","shouldDispatch","dispatchFn","InitializeUtil","createParticlesBatch","BATCH_SIZE","chunkSize","min","_createParticleChunk","reserve","newCapacity","capacity","createParticle","setupParticle","BehaviourEmitter","_Emitter","selfBehaviours","addSelfBehaviour","removeSelfBehaviour","FollowEmitter","mouseTarget","window","_allowEmitting","initEventHandler","_this2","mousemoveHandler","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","layerX","layerY","offsetX","offsetY","isImage","__isImage","tagName","nodeName","isString","BaseRenderer","element","stroke","circleConf","isCircle","setStroke","thinkness","_protonUpdateHandler","onProtonUpdate","_protonUpdateAfterHandler","onProtonUpdateAfter","_emitterAddedHandler","onEmitterAdded","_emitterRemovedHandler","onEmitterRemoved","_particleCreatedHandler","onParticleCreated","_particleUpdateHandler","onParticleUpdate","_particleDeadHandler","onParticleDead","CanvasRenderer","_BaseRenderer","bufferCache","addImg2Body","Types","drawCircle","buffer","createBuffer","bufContext","globalAlpha","globalCompositeOperation","fillStyle","fillRect","save","translate","restore","beginPath","arc","strokeStyle","lineWidth","closePath","fill","size","DomRenderer","createBody","bodyReady","backgroundColor","createCircle","createSprite","borderRadius","borderColor","borderWidth","url","backgroundImage","EaselRenderer","addChild","scaleX","scaleY","graphics","regX","regY","createjs","Graphics","beginStroke","beginFill","shape","Shape","PixelRenderer","rectangle","imageData","createImageData","putImageData","setPixel","PIXIClass","rendererIdCounter","EmitterAwarePool","_Pool","emitterPools","Map","emitterId","has","emitterPool","__emitterId","forEach","PixiRenderer","setColor","blendMode","rendererId","pixiPool","emitterMap","setPIXI","PIXI","_proto2","Sprite","createFromImage","from","Set","delete","tint","anchor","lineStyle","endFill","children","MStack","mats","top","WebGLRenderer","gl","antialias","stencil","depth","initVar","setMaxRadius","initShaders","initBuffers","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","umat","smat","mstack","viewport","circleCanvasURL","getVertexShader","vsSource","getFragmentShader","fsSource","texturebuffers","A","B","getShader","fs","shader","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","vertexShader","sprogram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","vpa","getAttribLocation","tca","enableVertexAttribArray","tMatUniform","getUniformLocation","samplerUniform","useTex","uniform1i","vs","idx","unitIBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","STATIC_DRAW","ids","unitI33","stripBuffer","raidus","circleCanvasRadius","toDataURL","drawImg2Canvas","_w","_h","_width","_height","_scaleX","_scaleY","createTexture","texture","vcBuffer","tcBuffer","ARRAY_BUFFER","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","textureLoaded","textureWidth","textureHeight","tmat","imat","oldScale","updateMatrix","uniform3f","uniformMatrix3fv","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","moveOriginMatrix","translationMatrix","angel","rotationMatrix","scaleMatrix","matrix","CustomRenderer","LineZone","x1","y1","x2","y2","direction","minx","miny","maxx","maxy","xxyy","getLength","C","D","getDistance","getSymmetric","tha2","tha1","oldx","oldy","rangeOut","CircleZone","randomRadius","setCenter","RectZone","ImageZone","vectors","setVectors","j","length1","length2","getBound","getColor","func","getStyle","drawZone","moveTo","lineTo","drawRect","drawEmitter"],"mappings":"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"}